<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- NOVICE TIER: Minimal working templates -->
    
    <!-- Jobs View Template - Simple progress tracking -->
    <DataTemplate x:Key="NoviceJobsViewModelTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="10">
            <StackPanel>
                <!-- Friendly Header -->
                <StackPanel Orientation="Horizontal" Margin="0,0,0,20">
                    <TextBlock Text="📋" FontSize="24" Margin="0,0,10,0"/>
                    <TextBlock Text="My Tasks" 
                               Style="{DynamicResource HeadingLargeStyle}"
                               VerticalAlignment="Center"/>
                </StackPanel>
                
                <!-- Current Jobs Section -->
                <StackPanel Margin="0,0,0,20">
                    <TextBlock Text="⏳ Running Now" 
                               Style="{DynamicResource HeadingSmallStyle}"
                               Margin="0,0,0,10"/>
                    <ItemsControl ItemsSource="{Binding ActiveJobs}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                        CornerRadius="6" 
                                        Padding="12" 
                                        Margin="0,0,0,8">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <StackPanel Grid.Column="0">
                                            <TextBlock Text="{Binding Name}" 
                                                       Style="{DynamicResource BodyTextBoldStyle}"/>
                                            <TextBlock Text="{Binding Status}" 
                                                       Foreground="{DynamicResource TextSecondaryBrush}"
                                                       Style="{DynamicResource BodyTextSmallStyle}"/>
                                        </StackPanel>
                                        
                                        <TextBlock Grid.Column="1" 
                                                   Text="{Binding Progress, StringFormat='{}{0:P0}'}" 
                                                   Style="{DynamicResource BodyTextBoldStyle}"
                                                   Foreground="{DynamicResource AccentRedBrush}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    
                    <!-- Empty state -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            CornerRadius="6" 
                            Padding="20"
                            Visibility="{Binding HasActiveJobs, Converter={StaticResource InverseBoolToVisibility}}">
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock Text="✅" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                            <TextBlock Text="All caught up!" 
                                       Style="{DynamicResource BodyTextStyle}"
                                       HorizontalAlignment="Center"/>
                            <TextBlock Text="No tasks running right now" 
                                       Style="{DynamicResource BodyTextSmallStyle}"
                                       Foreground="{DynamicResource TextSecondaryBrush}"
                                       HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
                
                <!-- Completed Jobs Section -->
                <StackPanel>
                    <TextBlock Text="✅ Recently Finished" 
                               Style="{DynamicResource HeadingSmallStyle}"
                               Margin="0,0,0,10"/>
                    <ItemsControl ItemsSource="{Binding CompletedJobs}" MaxHeight="200">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                        CornerRadius="6" 
                                        Padding="12" 
                                        Margin="0,0,0,4"
                                        Opacity="0.8">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0" 
                                                   Text="{Binding Name}" 
                                                   Style="{DynamicResource BodyTextStyle}"/>
                                        <TextBlock Grid.Column="1" 
                                                   Text="Done" 
                                                   Style="{DynamicResource BodyTextSmallStyle}"
                                                   Foreground="{DynamicResource SuccessBrush}"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Datasets View Template - Simple dataset library -->
    <DataTemplate x:Key="NoviceDatasetsViewModelTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="10">
            <StackPanel>
                <!-- Friendly Header -->
                <StackPanel Orientation="Horizontal" Margin="0,0,0,20">
                    <TextBlock Text="📚" FontSize="24" Margin="0,0,10,0"/>
                    <TextBlock Text="Knowledge Library" 
                               Style="{DynamicResource HeadingLargeStyle}"
                               VerticalAlignment="Center"/>
                </StackPanel>
                
                <!-- Quick Actions -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="16" 
                        Margin="0,0,0,20">
                    <StackPanel>
                        <TextBlock Text="📁 Add Your Documents" 
                                   Style="{DynamicResource HeadingSmallStyle}"
                                   Margin="0,0,0,10"/>
                        <TextBlock Text="Import your files to create a searchable knowledge base" 
                                   Style="{DynamicResource BodyTextStyle}"
                                   Foreground="{DynamicResource TextSecondaryBrush}"
                                   Margin="0,0,0,12"/>
                        
                        <StackPanel Orientation="Horizontal">
                            <Button Content="📁 Import Files" 
                                    Command="{Binding ImportDatasetCommand}"
                                    Style="{DynamicResource AccentButtonStyle}"
                                    Margin="0,0,12,0"/>
                            <Button Content="📂 Browse Folder" 
                                    Command="{Binding ScanDirectoryCommand}"
                                    Style="{DynamicResource SecondaryButtonStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
                
                <!-- My Datasets -->
                <TextBlock Text="📖 My Knowledge" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           Margin="0,0,0,10"
                           Visibility="{Binding HasDatasets, Converter={StaticResource BoolToVisibility}}"/>
                
                <ItemsControl ItemsSource="{Binding Datasets}"
                              Visibility="{Binding HasDatasets, Converter={StaticResource BoolToVisibility}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                    CornerRadius="6" 
                                    Padding="16" 
                                    Margin="0,0,0,10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" 
                                               Text="📚" 
                                               FontSize="20" 
                                               VerticalAlignment="Center" 
                                               Margin="0,0,12,0"/>
                                    
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="{Binding Name}" 
                                                   Style="{DynamicResource BodyTextBoldStyle}"/>
                                        <TextBlock Text="{Binding DocumentCount, StringFormat='{}{0} documents'}" 
                                                   Style="{DynamicResource BodyTextSmallStyle}"
                                                   Foreground="{DynamicResource TextSecondaryBrush}"/>
                                    </StackPanel>
                                    
                                    <TextBlock Grid.Column="2" 
                                               Text="Ready" 
                                               Style="{DynamicResource BodyTextSmallStyle}"
                                               Foreground="{DynamicResource SuccessBrush}"
                                               VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                
                <!-- Empty State -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="32"
                        Visibility="{Binding HasDatasets, Converter={StaticResource InverseBoolToVisibility}}">
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Text="📚" FontSize="48" HorizontalAlignment="Center" 
                                   Foreground="{DynamicResource TextMutedBrush}" Margin="0,0,0,16"/>
                        <TextBlock Text="No Knowledge Yet" 
                                   Style="{DynamicResource HeadingMediumStyle}"
                                   HorizontalAlignment="Center" Margin="0,0,0,8"/>
                        <TextBlock Text="Import your documents to start building your knowledge base" 
                                   Style="{DynamicResource BodyTextStyle}"
                                   Foreground="{DynamicResource TextSecondaryBrush}"
                                   HorizontalAlignment="Center" TextAlignment="Center"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- FUNCTIONAL NOVICE LoRACardTemplate - Simple but working -->
    <DataTemplate x:Key="LoRACardTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="12" 
                Margin="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- LoRA Name -->
                <TextBlock Grid.Row="0" 
                           Text="{Binding Name}" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           Margin="0,0,0,8"/>
                           
                <!-- LoRA Description -->
                <TextBlock Grid.Row="1" 
                           Text="{Binding Description}" 
                           Style="{DynamicResource BodyTextStyle}"
                           Foreground="{DynamicResource TextSecondaryBrush}"
                           TextWrapping="Wrap"
                           MaxHeight="40"
                           Margin="0,0,0,8"/>
                           
                <!-- Simple Apply Button -->
                <Button Grid.Row="2" 
                        Content="Apply LoRA"
                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ApplyLoRACommand}"
                        CommandParameter="{Binding}"
                        Style="{DynamicResource AccentButtonStyle}"
                        HorizontalAlignment="Stretch"/>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- Required template: ParameterControlTemplate -->
    <DataTemplate x:Key="ParameterControlTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="4">
            <TextBlock Text="⚙️ Simple Parameter Controls" 
                       Style="{DynamicResource BodyTextStyle}"/>
        </Border>
    </DataTemplate>
    
    <!-- NOVICE DASHBOARD: Simple welcome + essential quick actions only -->
    <DataTemplate x:Key="NoviceDashboardViewModelTemplate">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <StackPanel Margin="32" HorizontalAlignment="Center" MaxWidth="800">
                <!-- Simple Welcome -->
                <StackPanel Margin="0,0,0,40" HorizontalAlignment="Center">
                    <TextBlock Text="🏠 Welcome to Project Lazarus"
                               FontSize="36"
                               FontWeight="Bold"
                               Foreground="{DynamicResource AccentRedBrush}"
                               HorizontalAlignment="Center"
                               Margin="0,0,0,16"/>
                    <TextBlock Text="Your AI companion is ready. Choose an action below to get started."
                               Style="{StaticResource BodyTextStyle}"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap"
                               TextAlignment="Center"/>
                </StackPanel>

                <!-- Essential Quick Actions Only -->
                <Border Style="{StaticResource DarkCardStyle}" Padding="32">
                    <StackPanel>
                        <TextBlock Text="✨ Get Started"
                                   Style="{StaticResource HeadingMediumStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,24"/>
                        
                        <!-- 2x2 Grid of Essential Actions -->
                        <UniformGrid Columns="2" Rows="2" HorizontalAlignment="Center">
                            <!-- Start Chat - Primary Action -->
                            <Button Command="{Binding QuickChatCommand}"
                                    Style="{StaticResource PrimaryButtonStyle}"
                                    Margin="8"
                                    Padding="32,24"
                                    MinWidth="180">
                                <StackPanel>
                                    <TextBlock Text="💬" FontSize="32" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Start Chatting" Style="{StaticResource BodyTextStyle}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Text="Talk with AI" Style="{StaticResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                                </StackPanel>
                            </Button>

                            <!-- Load Model -->
                            <Button Command="{Binding QuickModelCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Margin="8"
                                    Padding="32,24"
                                    MinWidth="180">
                                <StackPanel>
                                    <TextBlock Text="🧠" FontSize="32" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Load Model" Style="{StaticResource BodyTextStyle}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Text="Choose AI brain" Style="{StaticResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                                </StackPanel>
                            </Button>

                            <!-- Generate Image -->
                            <Button Command="{Binding QuickImageCommand}"
                                    Style="{StaticResource SecondaryButtonStyle}"
                                    Margin="8"
                                    Padding="32,24"
                                    MinWidth="180">
                                <StackPanel>
                                    <TextBlock Text="🖼️" FontSize="32" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Create Image" Style="{StaticResource BodyTextStyle}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Text="AI art magic" Style="{StaticResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                                </StackPanel>
                            </Button>

                            <!-- System Status -->
                            <Border Background="{DynamicResource TertiaryDarkBrush}"
                                    CornerRadius="8"
                                    Padding="32,24"
                                    Margin="8"
                                    MinWidth="180">
                                <StackPanel>
                                    <Ellipse Width="32" Height="32"
                                             Fill="{DynamicResource SuccessBrush}"
                                             HorizontalAlignment="Center"/>
                                    <TextBlock Text="System Ready" Style="{StaticResource BodyTextStyle}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                    <TextBlock Text="All systems go" Style="{StaticResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                                </StackPanel>
                            </Border>
                        </UniformGrid>
                    </StackPanel>
                </Border>

                <!-- Simple Help -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="8" 
                        Padding="24" 
                        Margin="0,24,0,0">
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Text="💡 New to AI?"
                                   Style="{StaticResource HeadingSmallStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,12"/>
                        <TextBlock Text="Start with 'Start Chatting' to talk with your AI assistant. Ask it anything!"
                                   Style="{StaticResource BodyTextStyle}"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   MaxWidth="500"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>
    
    <!-- NOVICE RUNNER MANAGER: Simple runner selection + basic status -->
    <DataTemplate x:Key="NoviceRunnerManagerViewModelTemplate">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <StackPanel Margin="32" HorizontalAlignment="Center" MaxWidth="800">
                <!-- Simple Header -->
                <StackPanel Margin="0,0,0,32" HorizontalAlignment="Center">
                    <TextBlock Text="🏃‍♂️ AI Engine"
                               FontSize="32"
                               FontWeight="Bold"
                               Foreground="{DynamicResource AccentRedBrush}"
                               HorizontalAlignment="Center"
                               Margin="0,0,0,12"/>
                    <TextBlock Text="Choose which AI engine powers your conversations"
                               Style="{StaticResource BodyTextStyle}"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap"
                               TextAlignment="Center"/>
                </StackPanel>

                <!-- Current Engine Status -->
                <Border Style="{StaticResource DarkCardStyle}" Margin="0,0,0,24" Padding="24">
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Text="Current Engine" Style="{StaticResource CaptionTextStyle}" HorizontalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,8,0,0">
                            <Ellipse Width="16" Height="16" Fill="{DynamicResource SuccessBrush}" VerticalAlignment="Center" Margin="0,0,12,0"/>
                            <TextBlock Text="LlamaServer" Style="{StaticResource HeadingMediumStyle}" VerticalAlignment="Center"/>
                        </StackPanel>
                        <TextBlock Text="Ready and running" Style="{StaticResource BodyTextStyle}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                    </StackPanel>
                </Border>

                <!-- Simple Engine Selection -->
                <Border Style="{StaticResource DarkCardStyle}" Padding="24">
                    <StackPanel>
                        <TextBlock Text="✨ Available Engines"
                                   Style="{StaticResource HeadingMediumStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,20"/>
                        
                        <!-- Simple engine cards -->
                        <StackPanel>
                            <!-- LlamaServer -->
                            <Border Background="{DynamicResource TertiaryDarkBrush}"
                                    BorderBrush="{DynamicResource AccentRedBrush}"
                                    BorderThickness="2"
                                    CornerRadius="8"
                                    Padding="20,16"
                                    Margin="0,0,0,12"
                                    Cursor="Hand">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="🦙" FontSize="24" VerticalAlignment="Center" Margin="0,0,16,0"/>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="LlamaServer" Style="{StaticResource HeadingSmallStyle}"/>
                                        <TextBlock Text="Fast and reliable for most conversations" Style="{StaticResource BodyTextStyle}" Margin="0,4,0,0"/>
                                    </StackPanel>
                                    <TextBlock Grid.Column="2" Text="ACTIVE" Style="{StaticResource CaptionTextStyle}" Foreground="{DynamicResource SuccessBrush}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>

                            <!-- vLLM -->
                            <Border Background="{DynamicResource TertiaryDarkBrush}"
                                    CornerRadius="8"
                                    Padding="20,16"
                                    Margin="0,0,0,12"
                                    Cursor="Hand">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="⚡" FontSize="24" VerticalAlignment="Center" Margin="0,0,16,0"/>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="vLLM" Style="{StaticResource HeadingSmallStyle}"/>
                                        <TextBlock Text="Super fast for lots of conversations" Style="{StaticResource BodyTextStyle}" Margin="0,4,0,0"/>
                                    </StackPanel>
                                    <TextBlock Grid.Column="2" Text="Available" Style="{StaticResource CaptionTextStyle}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>

                            <!-- ExLlamaV2 -->
                            <Border Background="{DynamicResource TertiaryDarkBrush}"
                                    CornerRadius="8"
                                    Padding="20,16"
                                    Cursor="Hand">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="🧠" FontSize="24" VerticalAlignment="Center" Margin="0,0,16,0"/>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="ExLlamaV2" Style="{StaticResource HeadingSmallStyle}"/>
                                        <TextBlock Text="Great for creative and complex tasks" Style="{StaticResource BodyTextStyle}" Margin="0,4,0,0"/>
                                    </StackPanel>
                                    <TextBlock Grid.Column="2" Text="Available" Style="{StaticResource CaptionTextStyle}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </StackPanel>
                        
                        <!-- Simple explanation -->
                        <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                CornerRadius="8" 
                                Padding="20" 
                                Margin="0,20,0,0">
                            <StackPanel>
                                <TextBlock Text="💡 Which should I choose?"
                                           Style="{StaticResource HeadingSmallStyle}"
                                           HorizontalAlignment="Center"
                                           Margin="0,0,0,12"/>
                                <TextBlock Text="LlamaServer works great for most people. The others are for special situations or if you want extra speed."
                                           Style="{StaticResource BodyTextStyle}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>
    
    <!-- ENHANCED NOVICE ChatMessageTemplate - Visual Metaphors + Conversation Flow -->
    <DataTemplate x:Key="ChatMessageTemplate">
        <Border Margin="12,8" 
                Padding="16" 
                Background="{DynamicResource TertiaryDarkBrush}" 
                CornerRadius="16"
                BorderBrush="{DynamicResource AccentRedBrush}"
                BorderThickness="0,0,0,2">
            
            <StackPanel>
                <!-- Conversation Flow Header with Visual Metaphors -->
                <Grid Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Role Icon + Name -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <!-- Visual Role Icons -->
                        <TextBlock FontSize="16" 
                                   VerticalAlignment="Center"
                                   Margin="0,0,6,0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Role}" Value="User">
                                            <Setter Property="Text" Value="👤"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Role}" Value="Assistant">
                                            <Setter Property="Text" Value="🤖"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Role}" Value="System">
                                            <Setter Property="Text" Value="⚙️"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Role}" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   Foreground="{DynamicResource AccentRedBrush}"
                                   FontWeight="SemiBold"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                    
                    <!-- Conversation Flow Indicator -->
                    <Border Grid.Column="2" 
                            Background="{DynamicResource AccentRedBrush}"
                            CornerRadius="8" 
                            Padding="6,2">
                        <TextBlock Text="{Binding MessageIndex, StringFormat={}#{0}}" 
                                   Foreground="{DynamicResource TextPrimaryBrush}"
                                   FontSize="10"
                                   FontWeight="Bold"/>
                    </Border>
                </Grid>
                           
                <!-- Message Text - Ultra-Readable -->
                <TextBlock Text="{Binding Text}" 
                           Style="{DynamicResource BodyTextStyle}"
                           Foreground="{DynamicResource TextPrimaryBrush}"
                           TextWrapping="Wrap"
                           LineHeight="24"
                           FontSize="14"/>
                           
                <!-- Simple Visual Separator -->
                <Border Height="1" 
                        Background="{DynamicResource BorderBrush}" 
                        Opacity="0.3"
                        Margin="0,6,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Required template: ChatStatusTemplate -->
    <DataTemplate x:Key="ChatStatusTemplate">
        <Border Background="{DynamicResource PrimaryDarkBrush}" 
                Padding="40" 
                CornerRadius="12"
                BorderBrush="{DynamicResource AccentRedBrush}" 
                BorderThickness="2">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="500">
                <!-- Empowering Header -->
                <TextBlock Text="🚀 Ready to Create Magic?" 
                           FontSize="24" 
                           FontWeight="Bold" 
                           Foreground="{DynamicResource AccentRedBrush}" 
                           HorizontalAlignment="Center" 
                           Margin="0,0,0,16"/>
                
                <TextBlock Text="You're just one click away from having conversations with AI. Let's get you set up!" 
                           FontSize="16" 
                           Foreground="{DynamicResource TextSecondaryBrush}" 
                           TextWrapping="Wrap" 
                           HorizontalAlignment="Center" 
                           TextAlignment="Center"
                           Margin="0,0,0,24"/>
                
                <!-- Powerful Action Button -->
                <Border Background="{DynamicResource AccentRedBrush}" 
                        CornerRadius="8" 
                        Cursor="Hand">
                    <Button Content="🔥 Set Up Your First Model" 
                            FontSize="16" 
                            FontWeight="SemiBold" 
                            Padding="24,12" 
                            Background="Transparent"
                            Foreground="White" 
                            BorderThickness="0"/>
                </Border>
                
                <!-- Confidence Building Text -->
                <TextBlock Text="It only takes 30 seconds ⚡" 
                           FontSize="12" 
                           Foreground="{DynamicResource TextMutedBrush}" 
                           HorizontalAlignment="Center" 
                           Margin="0,12,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Required template: FloatParameterTemplate -->
    <DataTemplate x:Key="FloatParameterTemplate">
        <StackPanel>
            <TextBlock Text="🔢 Decimal Setting" Style="{DynamicResource CaptionTextStyle}"/>
            <Slider Minimum="0" Maximum="1" Value="0.7"/>
        </StackPanel>
    </DataTemplate>
    
    <!-- Required template: IntParameterTemplate -->
    <DataTemplate x:Key="IntParameterTemplate">
        <StackPanel>
            <TextBlock Text="📊 Number Setting" Style="{DynamicResource CaptionTextStyle}"/>
            <TextBox Text="512"/>
        </StackPanel>
    </DataTemplate>
    
    <!-- Required template: BoolParameterTemplate -->
    <DataTemplate x:Key="BoolParameterTemplate">
        <CheckBox Content="✓ Enable Feature" Style="{DynamicResource DarkCheckBoxStyle}"/>
    </DataTemplate>
    
    <!-- RISK-CLASSIFIED PARAMETER TEMPLATES -->
    
    <!-- Safe Parameter Templates (Beginner-Friendly) -->
    <DataTemplate x:Key="SafeFloatParameterTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                BorderBrush="#4CAF50" 
                BorderThickness="2" 
                CornerRadius="8" 
                Padding="12" 
                Margin="0,0,0,8">
            <StackPanel>
                <!-- Safe Parameter Header -->
                <Grid Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Background="#4CAF50" 
                            CornerRadius="12" 
                            Width="20" Height="20" 
                            Margin="0,0,8,0">
                        <TextBlock Text="✅" 
                                   FontSize="10" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"/>
                    </Border>
                    <TextBlock Grid.Column="1" 
                               Text="{Binding Key}" 
                               FontSize="14" 
                               FontWeight="SemiBold" 
                               Foreground="{DynamicResource TextPrimaryBrush}" 
                               VerticalAlignment="Center"/>
                    <Border Grid.Column="2" 
                            Background="#4CAF50" 
                            CornerRadius="8" 
                            Padding="6,2">
                        <TextBlock Text="SAFE" 
                                   FontSize="9" 
                                   FontWeight="SemiBold" 
                                   Foreground="White"/>
                    </Border>
                </Grid>
                
                <!-- Friendly Description -->
                <TextBlock Text="{Binding Value.Description}" 
                           FontSize="12" 
                           Foreground="{DynamicResource TextSecondaryBrush}" 
                           TextWrapping="Wrap" 
                           Margin="0,0,0,8"/>
                
                <!-- Simple Slider Control -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" 
                               Text="{Binding Value.MinValue}" 
                               FontSize="11" 
                               Foreground="{DynamicResource TextMutedBrush}" 
                               VerticalAlignment="Center" 
                               Margin="0,0,8,0"/>
                    <Slider Grid.Column="1" 
                            Value="{Binding Value.DefaultValue}" 
                            Minimum="{Binding Value.MinValue}" 
                            Maximum="{Binding Value.MaxValue}" 
                            TickFrequency="0.1" 
                            IsSnapToTickEnabled="True" 
                            TickPlacement="BottomRight"/>
                    <TextBlock Grid.Column="2" 
                               Text="{Binding Value.MaxValue}" 
                               FontSize="11" 
                               Foreground="{DynamicResource TextMutedBrush}" 
                               VerticalAlignment="Center" 
                               Margin="8,0,0,0"/>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Caution Parameter Template (Hidden from Novice by default) -->
    <DataTemplate x:Key="CautionParameterWarningTemplate">
        <Border Background="#FF9800" 
                CornerRadius="6" 
                Padding="12" 
                Margin="0,0,0,8"
                Opacity="0.7">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="⚠️" FontSize="16" Margin="0,0,8,0"/>
                <StackPanel>
                    <TextBlock Text="{Binding Key}" 
                               FontSize="12" 
                               FontWeight="SemiBold" 
                               Foreground="White"/>
                    <TextBlock Text="This parameter requires more experience. Switch to Enthusiast mode to access." 
                               FontSize="11" 
                               Foreground="White" 
                               TextWrapping="Wrap"/>
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Experimental Parameter Template (Hidden from Novice) -->
    <DataTemplate x:Key="ExperimentalParameterWarningTemplate">
        <Border Background="#F44336" 
                CornerRadius="6" 
                Padding="12" 
                Margin="0,0,0,8"
                Opacity="0.7">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="🧪" FontSize="16" Margin="0,0,8,0"/>
                <StackPanel>
                    <TextBlock Text="{Binding Key}" 
                               FontSize="12" 
                               FontWeight="SemiBold" 
                               Foreground="White"/>
                    <TextBlock Text="This is an experimental parameter. Switch to Developer mode to access." 
                               FontSize="11" 
                               Foreground="White" 
                               TextWrapping="Wrap"/>
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Required template: GenerationProgressTemplate -->
    <DataTemplate x:Key="GenerationProgressTemplate">
        <StackPanel>
            <TextBlock Text="⏳ Creating..." Style="{DynamicResource BodyTextStyle}"/>
            <ProgressBar Value="50" Height="8"/>
        </StackPanel>
    </DataTemplate>
    
    <!-- Required template: ModelSelectionTemplate -->
    <DataTemplate x:Key="ModelSelectionTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="🧠 Choose Your AI" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"/>
                <ComboBox Style="{DynamicResource DarkComboBoxStyle}" Margin="0,8"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Required template: StatusDisplayTemplate -->
    <DataTemplate x:Key="StatusDisplayTemplate">
        <Border Padding="8" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="4">
            <TextBlock Text="🟢 System Ready" Style="{DynamicResource CaptionTextStyle}"/>
        </Border>
    </DataTemplate>
    
    <!-- Required template: ErrorDisplayTemplate -->
    <DataTemplate x:Key="ErrorDisplayTemplate">
        <Border Padding="12" Background="{DynamicResource ErrorBrush}" CornerRadius="4">
            <TextBlock Text="⚠️ Something went wrong" 
                       Foreground="White" 
                       Style="{DynamicResource BodyTextStyle}"/>
        </Border>
    </DataTemplate>
    
    <!-- Voice Synthesis Templates -->
    <DataTemplate x:Key="TTSConfigurationTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Speak Your Words Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="🎤" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Speak Your Words" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Step 1: What to Say -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="1️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="What would you like me to say?" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <TextBox Text="{Binding TextToSpeak, UpdateSourceTrigger=PropertyChanged}" 
                                 Background="{DynamicResource TertiaryDarkBrush}" 
                                 Foreground="{DynamicResource TextPrimaryBrush}" 
                                 BorderBrush="{DynamicResource BorderBrush}" 
                                 Padding="10" 
                                 MinHeight="80" 
                                 TextWrapping="Wrap" 
                                 AcceptsReturn="True" 
                                 FontSize="13"/>
                    </StackPanel>
                </Border>
                
                <!-- Step 2: Choose Voice -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="2️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Pick a voice that sounds right" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <ComboBox SelectedItem="{Binding SelectedVoice}" 
                                  ItemsSource="{Binding AvailableVoices}" 
                                  Background="{DynamicResource TertiaryDarkBrush}" 
                                  Foreground="{DynamicResource TextPrimaryBrush}" 
                                  BorderBrush="{DynamicResource BorderBrush}" 
                                  Padding="10" 
                                  FontSize="13">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Gender, Converter={StaticResource GenderToIcon}}" Margin="0,0,8,0"/>
                                        <TextBlock Text="{Binding DisplayName}" FontWeight="Medium" Margin="0,0,8,0"/>
                                        <TextBlock Text="{Binding Language}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   FontSize="12"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </Border>
                
                <!-- Step 3: Make it Sound Right -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                            <TextBlock Text="3️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="How fast should I talk?" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" 
                                       Text="🐌 Slow" 
                                       FontSize="12" 
                                       Foreground="{DynamicResource TextSecondaryBrush}" 
                                       VerticalAlignment="Center" 
                                       Margin="0,0,10,0"/>
                            <Slider Grid.Column="1" 
                                    Value="{Binding SpeechRate}" 
                                    Minimum="0.5" 
                                    Maximum="2.0" 
                                    TickFrequency="0.5" 
                                    IsSnapToTickEnabled="True" 
                                    TickPlacement="BottomRight"/>
                            <TextBlock Grid.Column="2" 
                                       Text="🚀 Fast" 
                                       FontSize="12" 
                                       Foreground="{DynamicResource TextSecondaryBrush}" 
                                       VerticalAlignment="Center" 
                                       Margin="10,0,0,0"/>
                        </Grid>
                    </StackPanel>
                </Border>
                
                <!-- Generate Voice Button -->
                <Button Content="🎵 Create Voice" 
                        Command="{Binding GenerateSpeechCommand}" 
                        Background="{DynamicResource AccentRedBrush}" 
                        Foreground="{DynamicResource TextPrimaryBrush}" 
                        BorderBrush="{DynamicResource AccentRedBrush}" 
                        Padding="15,10" 
                        FontSize="14" 
                        FontWeight="SemiBold" 
                        HorizontalAlignment="Center" 
                        MinWidth="150">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="VoiceCloningTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Clone a Voice Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="🧬" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Clone a Voice" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Step 1: Upload Voice Sample -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="1️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Upload a clear voice recording" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="4" 
                                Padding="20" 
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Text="📁" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                                <TextBlock Text="Drop your audio file here" 
                                           FontSize="13" 
                                           FontWeight="Medium" 
                                           HorizontalAlignment="Center" 
                                           Foreground="{DynamicResource TextPrimaryBrush}" 
                                           Margin="0,0,0,8"/>
                                <TextBlock Text="(WAV, MP3, or FLAC - at least 10 seconds)" 
                                           FontSize="11" 
                                           HorizontalAlignment="Center" 
                                           Foreground="{DynamicResource TextSecondaryBrush}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Step 2: Name Your Voice -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="2️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Give your voice clone a name" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <TextBox Text="{Binding VoiceCloneName, UpdateSourceTrigger=PropertyChanged}" 
                                 Background="{DynamicResource TertiaryDarkBrush}" 
                                 Foreground="{DynamicResource TextPrimaryBrush}" 
                                 BorderBrush="{DynamicResource BorderBrush}" 
                                 Padding="10" 
                                 FontSize="13"/>
                    </StackPanel>
                </Border>
                
                <!-- Step 3: Start Training -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="3️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Train the AI to copy the voice" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <TextBlock Text="This will take about 5-10 minutes" 
                                   FontSize="12" 
                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                   Margin="0,0,0,10"/>
                        <Button Content="🚀 Start Voice Training" 
                                Command="{Binding StartVoiceTrainingCommand}" 
                                Background="{DynamicResource AccentRedBrush}" 
                                Foreground="{DynamicResource TextPrimaryBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                Padding="15,10" 
                                FontSize="14" 
                                FontWeight="SemiBold" 
                                HorizontalAlignment="Center" 
                                MinWidth="180">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="RealTimeSynthesisTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Live Voice Chat Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="⚡" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Live Voice Chat" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Voice Chat Interface -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="20" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <!-- Active Voice Display -->
                        <StackPanel Orientation="Horizontal" 
                                   HorizontalAlignment="Center" 
                                   Margin="0,0,0,15">
                            <TextBlock Text="🎙️" FontSize="20" Margin="0,0,10,0"/>
                            <TextBlock Text="{Binding CurrentVoice.DisplayName}" 
                                       FontSize="16" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        
                        <!-- Talk Button -->
                        <Button Content="{Binding IsSpeaking, Converter={StaticResource SpeakingToText}}" 
                                Command="{Binding ToggleSpeechCommand}" 
                                Background="{DynamicResource AccentRedBrush}" 
                                Foreground="{DynamicResource TextPrimaryBrush}" 
                                FontSize="18" 
                                FontWeight="Bold" 
                                Padding="30,15" 
                                HorizontalAlignment="Center" 
                                MinWidth="200">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsSpeaking}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        
                        <!-- Quick Text Input -->
                        <StackPanel Margin="0,15,0,0">
                            <TextBlock Text="Or type something to say:" 
                                       FontSize="12" 
                                       Foreground="{DynamicResource TextSecondaryBrush}" 
                                       HorizontalAlignment="Center" 
                                       Margin="0,0,0,8"/>
                            <TextBox Text="{Binding QuickText, UpdateSourceTrigger=PropertyChanged}" 
                                     Background="{DynamicResource TertiaryDarkBrush}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     BorderBrush="{DynamicResource BorderBrush}" 
                                     Padding="10" 
                                     FontSize="13" 
                                     HorizontalAlignment="Center" 
                                     MinWidth="300"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="AudioProcessingTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Fix Your Audio Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="🔧" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Fix Your Audio" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Audio Upload Area -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <TextBlock Text="Upload audio that needs fixing" 
                                   FontSize="14" 
                                   FontWeight="SemiBold" 
                                   Foreground="{DynamicResource TextPrimaryBrush}" 
                                   HorizontalAlignment="Center" 
                                   Margin="0,0,0,10"/>
                        <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="4" 
                                Padding="20" 
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Text="🎵" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                                <TextBlock Text="Drop your noisy audio here" 
                                           FontSize="13" 
                                           FontWeight="Medium" 
                                           HorizontalAlignment="Center" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Quick Fix Options -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <TextBlock Text="Choose what to fix:" 
                                   FontSize="14" 
                                   FontWeight="SemiBold" 
                                   Foreground="{DynamicResource TextPrimaryBrush}" 
                                   Margin="0,0,0,12"/>
                        
                        <StackPanel>
                            <CheckBox Content="🔇 Remove background noise" 
                                     IsChecked="{Binding ReduceNoise}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     FontSize="13" 
                                     Margin="0,0,0,8"/>
                            <CheckBox Content="📢 Make it louder" 
                                     IsChecked="{Binding NormalizeVolume}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     FontSize="13" 
                                     Margin="0,0,0,8"/>
                            <CheckBox Content="✨ Enhance voice clarity" 
                                     IsChecked="{Binding EnhanceVoice}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     FontSize="13" 
                                     Margin="0,0,0,8"/>
                        </StackPanel>
                        
                        <Button Content="🎯 Fix My Audio" 
                                Command="{Binding ProcessAudioCommand}" 
                                Background="{DynamicResource AccentRedBrush}" 
                                Foreground="{DynamicResource TextPrimaryBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                Padding="15,10" 
                                Margin="0,12,0,0" 
                                FontSize="14" 
                                FontWeight="SemiBold" 
                                HorizontalAlignment="Center" 
                                MinWidth="150">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Image generation templates for Views we wired -->
    
    <!-- ImagesTemplate - Parent template with subtab navigation -->
    <DataTemplate x:Key="ImagesTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Subtab Navigation -->
            <Border Grid.Row="0" Background="{DynamicResource SecondaryDarkBrush}" 
                    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1"
                    Padding="16,12">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="🎨 Text to Image" 
                            Command="{Binding DataContext.NavigateToText2ImageCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🖼️ Image to Image" 
                            Command="{Binding DataContext.NavigateToImage2ImageCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🎭 Inpainting" 
                            Command="{Binding DataContext.NavigateToInpaintingCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="📐 Upscaling" 
                            Command="{Binding DataContext.NavigateToUpscalingCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"/>
                </StackPanel>
            </Border>
            
            <!-- Current Subtab Content -->
            <Border Grid.Row="1" Background="{DynamicResource PrimaryDarkBrush}" Padding="0">
                <ContentControl Content="{Binding DataContext.CurrentViewModel, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Border>
        </Grid>
    </DataTemplate>
    
    <!-- Text2ImageTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Text2ImageTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <Grid>
                <!-- Main Content (visible when capabilities are available) -->
                <StackPanel Visibility="{Binding HasImageGenerationCapability, Converter={StaticResource BoolToVisibility}}">
                <!-- Friendly Header -->
                <TextBlock Text="🎨 Create Images from Words" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Prompt Input -->
                <TextBlock Text="Describe what you want to see:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="60" 
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,16"/>
                
                <!-- Style Presets - Visual Tiles for Cognitive Load Reduction -->
                <TextBlock Text="Choose a style:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,8"/>
                <Grid Margin="0,0,0,16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Photo Style -->
                    <Button Grid.Column="0" Command="{Binding ApplyStylePresetCommand}" CommandParameter="photo"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0">
                        <StackPanel>
                            <TextBlock Text="📸" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Photo" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- Art Style -->
                    <Button Grid.Column="1" Command="{Binding ApplyStylePresetCommand}" CommandParameter="art"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="2,0,2,0">
                        <StackPanel>
                            <TextBlock Text="🎨" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Artistic" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- Cartoon Style -->
                    <Button Grid.Column="2" Command="{Binding ApplyStylePresetCommand}" CommandParameter="cartoon"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="2,0,2,0">
                        <StackPanel>
                            <TextBlock Text="🎭" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Cartoon" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- Concept Style -->
                    <Button Grid.Column="3" Command="{Binding ApplyStylePresetCommand}" CommandParameter="concept"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0">
                        <StackPanel>
                            <TextBlock Text="💡" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Concept" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </Grid>
                
                <!-- Generate Button -->
                <Button Content="✨ Generate Image" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🖼️ Your generated image will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Button -->
                <Button Content="💾 Save Image" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
                
                </StackPanel>
                
                <!-- Capability Error State (visible when capabilities are missing) -->
                <Border Background="{DynamicResource ErrorBrush}" Padding="10" Margin="5" CornerRadius="4"
                        Visibility="{Binding HasImageGenerationCapability, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}">
                    <TextBlock Text="{Binding ImageGenerationError}" Foreground="{DynamicResource TextPrimaryBrush}" TextWrapping="Wrap"/>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- Image2ImageTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Image2ImageTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🖼️ Transform Your Images" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Image -->
                <Button Content="📁 Load Image" 
                        Command="{Binding LoadImageCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Prompt Input -->
                <TextBlock Text="How do you want to change it:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="40" 
                         TextWrapping="Wrap"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Transform Button -->
                <Button Content="✨ Transform Image" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,8">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🔄 Transformed image will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Button -->
                <Button Content="💾 Save Result" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- ENHANCED NOVICE InpaintingTemplate - Visual Metaphors + Simple Workflow -->
    <DataTemplate x:Key="InpaintingTemplate">
        <Border Padding="20" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="12">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Friendly Header with Visual Metaphor -->
                <StackPanel Grid.Row="0" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <TextBlock Text="🎨✨" 
                               FontSize="32" 
                               HorizontalAlignment="Center"
                               Margin="0,0,0,8"/>
                    <TextBlock Text="Magic Image Fixer" 
                               Style="{DynamicResource HeadingLargeStyle}"
                               HorizontalAlignment="Center"
                               Margin="0,0,0,4"/>
                    <TextBlock Text="Paint over what you want to change, then describe what it should become" 
                               Style="{DynamicResource CaptionTextStyle}"
                               Foreground="{DynamicResource TextMutedBrush}"
                               TextAlignment="Center"
                               TextWrapping="Wrap"
                               MaxWidth="300"/>
                </StackPanel>
                
                <!-- Simple Step-by-Step Workflow -->
                <StackPanel Grid.Row="1" Margin="0,0,0,16">
                    <!-- Step 1: Load Image -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            Padding="16,12" 
                            CornerRadius="8"
                            Margin="0,0,0,8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    Background="{DynamicResource AccentRedBrush}"
                                    Width="30" Height="30"
                                    CornerRadius="15"
                                    Margin="0,0,12,0">
                                <TextBlock Text="1" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"
                                           FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Border>
                            
                            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock Text="Choose Your Image" 
                                           Style="{DynamicResource BodyTextStyle}"
                                           FontWeight="SemiBold"/>
                                <TextBlock Text="Pick the photo you want to fix" 
                                           Style="{DynamicResource CaptionTextStyle}"
                                           Foreground="{DynamicResource TextMutedBrush}"/>
                            </StackPanel>
                            
                            <Button Grid.Column="2"
                                    Content="📁 Browse" 
                                    Command="{Binding LoadImageCommand}"
                                    Style="{DynamicResource SecondaryButtonStyle}"
                                    Padding="12,6"/>
                        </Grid>
                    </Border>
                    
                    <!-- Step 2: Paint Area -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            Padding="16,12" 
                            CornerRadius="8"
                            Margin="0,0,0,8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    Background="{DynamicResource AccentRedBrush}"
                                    Width="30" Height="30"
                                    CornerRadius="15"
                                    Margin="0,0,12,0">
                                <TextBlock Text="2" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"
                                           FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Border>
                            
                            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock Text="Paint the Area" 
                                           Style="{DynamicResource BodyTextStyle}"
                                           FontWeight="SemiBold"/>
                                <TextBlock Text="Use your mouse to paint over what you want to change" 
                                           Style="{DynamicResource CaptionTextStyle}"
                                           Foreground="{DynamicResource TextMutedBrush}"/>
                            </StackPanel>
                            
                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                <Button Content="🖌️" 
                                        Style="{DynamicResource GhostButtonStyle}"
                                        Padding="8"
                                        ToolTip="Paint brush"
                                        Margin="0,0,4,0"/>
                                <Button Content="🧽" 
                                        Style="{DynamicResource GhostButtonStyle}"
                                        Padding="8"
                                        ToolTip="Eraser"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    
                    <!-- Step 3: Describe Change -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            Padding="16,12" 
                            CornerRadius="8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    Background="{DynamicResource AccentRedBrush}"
                                    Width="30" Height="30"
                                    CornerRadius="15"
                                    Margin="0,0,12,0">
                                <TextBlock Text="3" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"
                                           FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Border>
                            
                            <StackPanel Grid.Column="1">
                                <TextBlock Text="Describe What You Want" 
                                           Style="{DynamicResource BodyTextStyle}"
                                           FontWeight="SemiBold"
                                           Margin="0,0,0,6"/>
                                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{DynamicResource DarkTextBoxStyle}"
                                         MinHeight="45" 
                                         TextWrapping="Wrap"
                                         Tag="Example: a beautiful garden, a red car, blue sky..."/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </StackPanel>
                
                <!-- Magic Button -->
                <Button Grid.Row="2"
                        Content="✨ Work Your Magic ✨" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="24,10"
                        FontSize="14"
                        FontWeight="SemiBold"
                        Margin="0,0,0,16"/>
                
                <!-- Results Area -->
                <Border Grid.Row="3"
                        Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="8" 
                        Padding="16"
                        MinHeight="200">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <StackPanel HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}">
                            <TextBlock Text="🎭" 
                                       FontSize="48" 
                                       HorizontalAlignment="Center"
                                       Margin="0,0,0,8"
                                       Opacity="0.5"/>
                            <TextBlock Text="Your magical transformation will appear here" 
                                       Style="{DynamicResource CaptionTextStyle}"
                                       HorizontalAlignment="Center"
                                       Foreground="{DynamicResource TextMutedBrush}"
                                       FontStyle="Italic"/>
                        </StackPanel>
                    </Grid>
                </Border>
                
                <!-- Simple Save Action -->
                <Button Grid.Row="4"
                        Content="💾 Save My Creation" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Padding="16,8"
                        Margin="0,12,0,0"/>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- UpscalingTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="UpscalingTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🔍 Make Images Bigger &amp; Better" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Image -->
                <Button Content="📁 Load Image to Enhance" 
                        Command="{Binding LoadImageCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Scale Factor -->
                <TextBlock Text="Make it how much bigger:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="2x Bigger" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="4x Bigger" Margin="0,0,16,0"/>
                    <RadioButton Content="8x Bigger"/>
                </StackPanel>
                
                <!-- Upscale Button -->
                <Button Content="✨ Enhance Image" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,8">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="📈 Enhanced image will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Button -->
                <Button Content="💾 Save Enhanced Image" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- Video generation templates -->
    
    <!-- Text2VideoTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Text2VideoTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎬 Create Videos from Text" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Prompt Input -->
                <TextBlock Text="Describe the video you want to see:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="60" 
                         TextWrapping="Wrap"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Video Length -->
                <TextBlock Text="How long should it be:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="5 seconds" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="10 seconds" Margin="0,0,16,0"/>
                    <RadioButton Content="20 seconds"/>
                </StackPanel>
                
                <!-- Generate Button -->
                <Button Content="🎬 Generate Video" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <MediaElement Source="{Binding GeneratedVideoSource}" 
                                      LoadedBehavior="Manual"
                                      Stretch="Uniform"
                                      Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🎥 Generated video will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                           Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                           Margin="0,8,0,8">
                    <Button Content="▶️ Play" Command="{Binding PlayCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏸️ Pause" Command="{Binding PauseCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏹️ Stop" Command="{Binding StopCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Save Button -->
                <Button Content="💾 Save Video" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Video2VideoTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Video2VideoTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎨 Transform Your Videos" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Video -->
                <Button Content="📁 Load Video to Transform" 
                        Command="{Binding LoadVideoCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Transformation Prompt -->
                <TextBlock Text="How should the video be changed:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="40" 
                         TextWrapping="Wrap"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Strength Control -->
                <TextBlock Text="How much change:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Slight Change" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Medium Change" Margin="0,0,16,0"/>
                    <RadioButton Content="Major Change"/>
                </StackPanel>
                
                <!-- Transform Button -->
                <Button Content="✨ Transform Video" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <MediaElement Source="{Binding GeneratedVideoSource}" 
                                      LoadedBehavior="Manual"
                                      Stretch="Uniform"
                                      Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🔄 Transformed video will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                           Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                           Margin="0,8,0,8">
                    <Button Content="▶️ Play" Command="{Binding PlayCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏸️ Pause" Command="{Binding PauseCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏹️ Stop" Command="{Binding StopCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Save Button -->
                <Button Content="💾 Save Result" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- MotionControlTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="MotionControlTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎥 Control Camera Movement" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Camera Movement Type -->
                <TextBlock Text="Choose camera movement:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="🔄 Pan Left to Right" IsChecked="True" Margin="0,4"/>
                    <RadioButton Content="⬆️⬇️ Tilt Up and Down" Margin="0,4"/>
                    <RadioButton Content="🔍 Zoom In" Margin="0,4"/>
                    <RadioButton Content="🔎 Zoom Out" Margin="0,4"/>
                    <RadioButton Content="🌀 Orbit Around" Margin="0,4"/>
                </StackPanel>
                
                <!-- Speed Control -->
                <TextBlock Text="Movement speed:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Slow" Margin="0,0,16,0"/>
                    <RadioButton Content="Medium" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Fast"/>
                </StackPanel>
                
                <!-- Apply Motion Button -->
                <Button Content="🎬 Apply Camera Motion" 
                        Command="{Binding ApplyMotionCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Motion Preview -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,8">
                    <Grid>
                        <Canvas Background="Transparent" ClipToBounds="True"
                               Visibility="{Binding HasMotionPath, Converter={StaticResource BoolToVisibility}}">
                            <!-- Motion path visualization would go here -->
                            <Path Stroke="{DynamicResource AccentRedBrush}" StrokeThickness="2"
                                  Data="{Binding MotionPathGeometry}"/>
                        </Canvas>
                        <TextBlock Text="🎬 Camera motion preview will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasMotionPath, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Motion Button -->
                <Button Content="💾 Save Motion Path" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasMotionPath, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- TemporalEffectsTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="TemporalEffectsTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="⏰ Add Time Effects" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Video -->
                <Button Content="📁 Load Video for Effects" 
                        Command="{Binding LoadVideoCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Effect Type Selection -->
                <TextBlock Text="Choose time effect:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="🐌 Slow Motion (0.5x)" IsChecked="True" Margin="0,4"/>
                    <RadioButton Content="🐇 Super Slow Motion (0.25x)" Margin="0,4"/>
                    <RadioButton Content="⏩ Speed Up (2x)" Margin="0,4"/>
                    <RadioButton Content="🏃 Fast Forward (4x)" Margin="0,4"/>
                    <RadioButton Content="🔄 Reverse Time" Margin="0,4"/>
                </StackPanel>
                
                <!-- Smoothness Control -->
                <TextBlock Text="Effect smoothness:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Natural" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Smooth" Margin="0,0,16,0"/>
                    <RadioButton Content="Ultra Smooth"/>
                </StackPanel>
                
                <!-- Apply Effects Button -->
                <Button Content="✨ Apply Time Effect" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <MediaElement Source="{Binding GeneratedVideoSource}" 
                                      LoadedBehavior="Manual"
                                      Stretch="Uniform"
                                      Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="⏰ Time-altered video will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                           Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                           Margin="0,8,0,8">
                    <Button Content="▶️ Play" Command="{Binding PlayCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏸️ Pause" Command="{Binding PauseCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏹️ Stop" Command="{Binding StopCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Save Button -->
                <Button Content="💾 Save Time-Altered Video" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- 3D Models templates -->
    
    <!-- ThreeDModelsTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ThreeDModelsTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <Grid>
                <!-- Main Content (visible when 3D rendering is available) -->
                <StackPanel Visibility="{Binding Has3DRenderingCapability, Converter={StaticResource BoolToVisibility}}">
                <!-- Friendly Header -->
                <TextBlock Text="🎭 3D Model Workshop" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Model -->
                <Button Content="📁 Load 3D Model" 
                        Command="{Binding LoadModelCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Quick Actions -->
                <TextBlock Text="Quick actions:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <Button Content="🔄 Rotate" Command="{Binding RotateCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="🔍 Zoom In" Command="{Binding ZoomInCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="🔎 Zoom Out" Command="{Binding ZoomOutCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- 3D Viewport Preview -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="250"
                        Margin="0,0,0,8">
                    <Grid>
                        <Viewport3D ClipToBounds="True"
                                   Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}}">
                            <!-- 3D content would go here -->
                            <Viewport3D.Camera>
                                <PerspectiveCamera Position="{Binding CameraPosition}" 
                                                   LookDirection="{Binding CameraLookDirection}"
                                                   UpDirection="0,1,0"/>
                            </Viewport3D.Camera>
                            <!-- ModelVisual3D would be bound here -->
                        </Viewport3D>
                        <TextBlock Text="🎭 3D model will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Model Info -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="8"
                        Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,0,0,8">
                    <StackPanel>
                        <TextBlock Text="{Binding ModelName}" Style="{DynamicResource BodyTextStyle}" HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding VertexCount, StringFormat={}{0} vertices}" Style="{DynamicResource CaptionTextStyle}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
                
                <!-- Save Screenshot Button -->
                <Button Content="📷 Save Screenshot" 
                        Command="{Binding SaveScreenshotCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
                </StackPanel>
                
                <!-- Capability Error State (visible when 3D rendering is not available) -->
                <Border Background="{DynamicResource ErrorBrush}" Padding="10" Margin="5" CornerRadius="4"
                        Visibility="{Binding Has3DRenderingCapability, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}">
                    <TextBlock Text="{Binding ThreeDRenderingError}" Foreground="{DynamicResource TextPrimaryBrush}" TextWrapping="Wrap"/>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- ModelPropertiesPanelTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ModelPropertiesPanelTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="⚙️ Model Properties" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <!-- Basic Properties -->
                <Grid Margin="0,0,0,8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,8,4"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedModelName}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,4"/>
                    
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Size:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,8,4"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ModelSize}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,4"/>
                    
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Type:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,8,4"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ModelType}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,4"/>
                </Grid>
                
                <!-- Transform Controls -->
                <TextBlock Text="Transform:" Style="{DynamicResource CaptionTextStyle}" Margin="0,8,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <Button Content="Reset" Command="{Binding ResetTransformCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0"/>
                    <Button Content="Center" Command="{Binding CenterModelCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0"/>
                </StackPanel>
                
                <!-- Visibility Toggle -->
                <CheckBox Content="Show Model" 
                          IsChecked="{Binding IsModelVisible}" 
                          HorizontalAlignment="Center"
                          Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- ModelTreeViewTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ModelTreeViewTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="🌳 Model Browser" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <!-- Search Box -->
                <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource DarkTextBoxStyle}"
                         ToolTip="Search models..."
                         Margin="0,0,0,8"/>
                
                <!-- Model List -->
                <ListBox ItemsSource="{Binding ModelFiles}" 
                         SelectedItem="{Binding SelectedModelFile}"
                         Style="{DynamicResource DarkListBoxStyle}"
                         MinHeight="200"
                         Margin="0,0,0,8">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="📎" Margin="0,0,4,0"/>
                                <TextBlock Text="{Binding Name}" 
                                          Style="{DynamicResource BodyTextStyle}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                
                <!-- Load Selected Button -->
                <Button Content="📁 Load Selected" 
                        Command="{Binding LoadSelectedModelCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        IsEnabled="{Binding HasSelectedModel}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- ViewportControlTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ViewportControlTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="👁️ 3D Viewer" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <!-- View Controls -->
                <TextBlock Text="View mode:" Style="{DynamicResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <RadioButton Content="Solid" IsChecked="True" Margin="0,0,8,0"/>
                    <RadioButton Content="Wireframe" Margin="8,0,8,0"/>
                    <RadioButton Content="Points" Margin="8,0,0,0"/>
                </StackPanel>
                
                <!-- Camera Controls -->
                <TextBlock Text="Camera:" Style="{DynamicResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <Button Content="Front" Command="{Binding SetFrontViewCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0"/>
                    <Button Content="Side" Command="{Binding SetSideViewCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,4,0"/>
                    <Button Content="Top" Command="{Binding SetTopViewCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0"/>
                </StackPanel>
                
                <!-- Reset Button -->
                <Button Content="🔄 Reset View" 
                        Command="{Binding ResetViewCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,8,0,0"/>
                
                <!-- Grid Toggle -->
                <CheckBox Content="Show Grid" 
                          IsChecked="{Binding ShowGrid}" 
                          HorizontalAlignment="Center"
                          Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- Video templates -->
    
    <!-- VideoTemplate - Parent template with subtab navigation -->
    <DataTemplate x:Key="VideoTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Subtab Navigation -->
            <Border Grid.Row="0" Background="{DynamicResource SecondaryDarkBrush}" 
                    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1"
                    Padding="16,12">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="🎬 Text to Video" 
                            Command="{Binding DataContext.NavigateToText2VideoCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🎞️ Video to Video" 
                            Command="{Binding DataContext.NavigateToVideo2VideoCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🎯 Motion Control" 
                            Command="{Binding DataContext.NavigateToMotionControlCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="⏱️ Temporal Effects" 
                            Command="{Binding DataContext.NavigateToTemporalEffectsCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"/>
                </StackPanel>
            </Border>
            
            <!-- Current Subtab Content -->
            <Border Grid.Row="1" Background="{DynamicResource PrimaryDarkBrush}" Padding="0">
                <ContentControl Content="{Binding DataContext.CurrentViewModel, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Voice templates -->
    
    <!-- VoiceTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="VoiceTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎤 Voice Creation Studio" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Quick Start Options -->
                <TextBlock Text="What would you like to do?" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Action Buttons -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <Button Content="🗣️ Text to Speech" 
                            Command="{Binding OpenTTSCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="👤 Clone a Voice" 
                            Command="{Binding OpenVoiceCloningCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="⚡ Live Voice Synthesis" 
                            Command="{Binding OpenRealTimeCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="🎧 Audio Enhancement" 
                            Command="{Binding OpenAudioProcessingCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"/>
                </StackPanel>
                
                <!-- Status Display -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12"
                        Margin="0,16,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" 
                                   Text="Voice Engine Status:" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,4"/>
                        <TextBlock Grid.Row="1" 
                                   Text="{Binding VoiceEngineStatus}" 
                                   Style="{DynamicResource BodyTextStyle}"
                                   HorizontalAlignment="Center"/>
                    </Grid>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    
    

    <!-- Entities templates -->
    
    <!-- EntitiesTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="EntitiesTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🤖 Digital Entity Workshop" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Quick Start Options -->
                <TextBlock Text="What would you like to do?" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Action Buttons -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <Button Content="✨ Create New Entity" 
                            Command="{Binding CreateEntityCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="🧠 Design Personality" 
                            Command="{Binding OpenBehavioralPatternsCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="💬 Test Interactions" 
                            Command="{Binding OpenInteractionTestingCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="📋 Manage Entities" 
                            Command="{Binding OpenEntityManagementCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"/>
                </StackPanel>
                
                <!-- Active Entities Display -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12"
                        Margin="0,16,0,0">
                    <StackPanel>
                        <TextBlock Text="Active Entities:" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,8"/>
                        <ListBox ItemsSource="{Binding ActiveEntities}" 
                                 SelectedItem="{Binding SelectedEntity}"
                                 Style="{DynamicResource DarkListBoxStyle}"
                                 MinHeight="100">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="🤖" Margin="0,0,4,0"/>
                                        <TextBlock Text="{Binding Name}" 
                                                  Style="{DynamicResource BodyTextStyle}"/>
                                        <TextBlock Text="{Binding Status}" 
                                                  Style="{DynamicResource CaptionTextStyle}"
                                                  Margin="8,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- EntityCreationTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="EntityCreationTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="✨ Create New Entity" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Entity Name -->
                <TextBlock Text="Give your entity a name:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding EntityName, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Entity Type -->
                <TextBlock Text="What type of entity:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding EntityTypes}" 
                          SelectedItem="{Binding SelectedEntityType}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource DarkComboBoxStyle}"
                          Margin="0,0,0,12"/>
                
                <!-- Basic Personality -->
                <TextBlock Text="Basic personality:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="✓ Friendly &amp; Helpful" IsChecked="True" Margin="0,4"/>
                    <RadioButton Content="⚡ Professional &amp; Formal" Margin="0,4"/>
                    <RadioButton Content="🎨 Creative &amp; Artistic" Margin="0,4"/>
                    <RadioButton Content="📚 Academic &amp; Scholarly" Margin="0,4"/>
                    <RadioButton Content="★ Casual &amp; Fun" Margin="0,4"/>
                </StackPanel>
                
                <!-- Load 3D Avatar -->
                <Button Content="🎭 Load 3D Avatar" 
                        Command="{Binding LoadAvatarCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Avatar Preview -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,12">
                    <Grid>
                        <Viewport3D ClipToBounds="True"
                                   Visibility="{Binding HasAvatar, Converter={StaticResource BoolToVisibility}}">
                            <Viewport3D.Camera>
                                <PerspectiveCamera Position="{Binding AvatarCameraPosition}" 
                                                   LookDirection="{Binding AvatarLookDirection}"/>
                            </Viewport3D.Camera>
                            <!-- Avatar ModelVisual3D would be bound here -->
                        </Viewport3D>
                        <TextBlock Text="🎭 3D avatar preview will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasAvatar, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Create Entity Button -->
                <Button Content="🎆 Create Entity" 
                        Command="{Binding CreateEntityCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,8"/>
                
                <!-- Success Message -->
                <Border Background="{DynamicResource SuccessBrush}" 
                        CornerRadius="4" 
                        Padding="8"
                        Visibility="{Binding EntityCreated, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0">
                    <TextBlock Text="✓ Entity created successfully!" 
                               Foreground="White"
                               HorizontalAlignment="Center"/>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- BehavioralPatternsTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="BehavioralPatternsTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🧠 Personality Programming" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Select Entity -->
                <TextBlock Text="Choose entity to modify:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding AvailableEntities}" 
                          SelectedItem="{Binding SelectedEntity}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource DarkComboBoxStyle}"
                          Margin="0,0,0,12"/>
                
                <!-- Personality Traits -->
                <TextBlock Text="Personality traits (check what applies):" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto" Margin="0,0,0,12">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                        <!-- Positive Traits -->
                        <TextBlock Text="Positive Traits:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,0,4"/>
                        <CheckBox Content="Helpful &amp; Supportive" Margin="0,2"/>
                        <CheckBox Content="Patient &amp; Understanding" Margin="0,2"/>
                        <CheckBox Content="Creative &amp; Imaginative" Margin="0,2"/>
                        <CheckBox Content="Curious &amp; Inquisitive" Margin="0,2"/>
                        <CheckBox Content="Humorous &amp; Playful" Margin="0,2"/>
                        
                        <!-- Communication Style -->
                        <TextBlock Text="Communication Style:" Style="{DynamicResource CaptionTextStyle}" Margin="0,8,0,4"/>
                        <CheckBox Content="Uses emojis and expressions" Margin="0,2"/>
                        <CheckBox Content="Speaks formally" Margin="0,2"/>
                        <CheckBox Content="Uses casual language" Margin="0,2"/>
                        <CheckBox Content="Asks follow-up questions" Margin="0,2"/>
                    </StackPanel>
                </ScrollViewer>
                
                <!-- Behavior Intensity -->
                <TextBlock Text="Personality intensity:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Subtle" Margin="0,0,16,0"/>
                    <RadioButton Content="Moderate" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Strong"/>
                </StackPanel>
                
                <!-- Apply Changes Button -->
                <Button Content="✨ Apply Personality" 
                        Command="{Binding ApplyBehaviorCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,8"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12"
                        MinHeight="80"
                        Margin="0,8,0,0">
                    <StackPanel>
                        <TextBlock Text="Personality Preview:" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,4"/>
                        <TextBlock Text="{Binding PersonalityPreview}" 
                                   Style="{DynamicResource BodyTextStyle}"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- InteractionTestingTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="InteractionTestingTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="💬 Entity Testing Ground" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Select Entity to Test -->
                <TextBlock Text="Choose entity to chat with:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding AvailableEntities}" 
                          SelectedItem="{Binding SelectedEntity}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource DarkComboBoxStyle}"
                          Margin="0,0,0,12"/>
                
                <!-- Start Conversation Button -->
                <Button Content="🚀 Start Conversation" 
                        Command="{Binding StartConversationCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        IsEnabled="{Binding HasSelectedEntity}"
                        Margin="0,0,0,12"/>
                
                <!-- Chat History -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="300"
                        Margin="0,0,0,8">
                    <ScrollViewer x:Name="ChatScrollViewer" 
                                 VerticalScrollBarVisibility="Auto"
                                 Padding="8">
                        <ItemsControl ItemsSource="{Binding ChatHistory}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                            CornerRadius="8" 
                                            Padding="8" 
                                            Margin="0,0,0,4">
                                        <StackPanel>
                                            <TextBlock Text="{Binding Sender}" 
                                                      Style="{DynamicResource CaptionTextStyle}"
                                                      FontWeight="Bold"/>
                                            <TextBlock Text="{Binding Message}" 
                                                      Style="{DynamicResource BodyTextStyle}"
                                                      TextWrapping="Wrap"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
                
                <!-- Message Input -->
                <Grid Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBox Grid.Column="0"
                             Text="{Binding UserMessage, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{DynamicResource DarkTextBoxStyle}"
                             MinHeight="40"
                             TextWrapping="Wrap"
                             Margin="0,0,8,0"/>
                    <Button Grid.Column="1"
                            Content="Send" 
                            Command="{Binding SendMessageCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            IsEnabled="{Binding CanSendMessage}"/>
                </Grid>
                
                <!-- Quick Test Prompts -->
                <TextBlock Text="Quick test prompts:" 
                           Style="{DynamicResource CaptionTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,8,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <Button Content="Hello!" Command="{Binding SendQuickMessageCommand}" CommandParameter="Hello!" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0"/>
                    <Button Content="Tell me a joke" Command="{Binding SendQuickMessageCommand}" CommandParameter="Tell me a joke" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,4,0"/>
                    <Button Content="What can you do?" Command="{Binding SendQuickMessageCommand}" CommandParameter="What can you do?" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0"/>
                </StackPanel>
                
                <!-- Clear Chat Button -->
                <Button Content="🗑️ Clear Chat" 
                        Command="{Binding ClearChatCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasChatHistory, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- EntityManagementTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="EntityManagementTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="📋 Entity Library" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Search Entities -->
                <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource DarkTextBoxStyle}"
                         ToolTip="Search entities..."
                         Margin="0,0,0,12"/>
                
                <!-- Entity List -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="250"
                        Margin="0,0,0,12">
                    <ListBox ItemsSource="{Binding Entities}" 
                             SelectedItem="{Binding SelectedEntity}"
                             Style="{DynamicResource DarkListBoxStyle}"
                             Padding="8">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="4" 
                                        Padding="8" 
                                        Margin="0,0,0,4">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0" 
                                                  Text="🤖" 
                                                  FontSize="20" 
                                                  VerticalAlignment="Center"
                                                  Margin="0,0,8,0"/>
                                        
                                        <StackPanel Grid.Column="1">
                                            <TextBlock Text="{Binding Name}" 
                                                      Style="{DynamicResource BodyTextStyle}"
                                                      FontWeight="Bold"/>
                                            <TextBlock Text="{Binding EntityType}" 
                                                      Style="{DynamicResource CaptionTextStyle}"/>
                                            <TextBlock Text="{Binding CreatedDate, StringFormat={}Created: {0:MM/dd/yyyy}}" 
                                                      Style="{DynamicResource CaptionTextStyle}"/>
                                        </StackPanel>
                                        
                                        <StackPanel Grid.Column="2" 
                                                   Orientation="Horizontal">
                                            <Button Content="Edit" 
                                                    Command="{Binding DataContext.EditEntityCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                    CommandParameter="{Binding}"
                                                    Style="{DynamicResource SecondaryButtonStyle}" 
                                                    Margin="0,0,4,0"/>
                                            <Button Content="Delete" 
                                                    Command="{Binding DataContext.DeleteEntityCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                    CommandParameter="{Binding}"
                                                    Style="{DynamicResource DangerButtonStyle}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
                
                <!-- Management Actions -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <Button Content="➕ Import Entity" 
                            Command="{Binding ImportEntityCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}" 
                            Margin="0,0,8,0"/>
                    <Button Content="📄 Export Selected" 
                            Command="{Binding ExportEntityCommand}"
                            Style="{DynamicResource SecondaryButtonStyle}" 
                            IsEnabled="{Binding HasSelectedEntity}"
                            Margin="0,0,8,0"/>
                    <Button Content="💾 Backup All" 
                            Command="{Binding BackupAllEntitiesCommand}"
                            Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Entity Statistics -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding TotalEntities}" 
                                      Style="{DynamicResource HeadingLargeStyle}"
                                      HorizontalAlignment="Center"/>
                            <TextBlock Text="Total Entities" 
                                      Style="{DynamicResource CaptionTextStyle}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                        
                        <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding ActiveEntities}" 
                                      Style="{DynamicResource HeadingLargeStyle}"
                                      HorizontalAlignment="Center"/>
                            <TextBlock Text="Active Now" 
                                      Style="{DynamicResource CaptionTextStyle}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                        
                        <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding StorageUsed}" 
                                      Style="{DynamicResource HeadingLargeStyle}"
                                      HorizontalAlignment="Center"/>
                            <TextBlock Text="Storage Used" 
                                      Style="{DynamicResource CaptionTextStyle}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
</ResourceDictionary>