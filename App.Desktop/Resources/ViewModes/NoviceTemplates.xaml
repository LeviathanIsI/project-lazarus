<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- NOVICE TIER: Minimal working templates -->
    
    <!-- Jobs View Template - Simple progress tracking -->
    <DataTemplate x:Key="NoviceJobsViewModelTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="10">
            <StackPanel>
                <!-- Friendly Header -->
                <StackPanel Orientation="Horizontal" Margin="0,0,0,20">
                    <TextBlock Text="📋" FontSize="24" Margin="0,0,10,0"
                               Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="My Tasks" 
                               Style="{DynamicResource HeadingLargeStyle}"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource TextPrimaryBrush}"/>
                </StackPanel>
                
                <!-- Current Jobs Section -->
                <StackPanel Margin="0,0,0,20">
                    <TextBlock Text="⏳ Running Now" 
                               Style="{DynamicResource HeadingSmallStyle}"
                               Margin="0,0,0,10"/>
                    <ItemsControl ItemsSource="{Binding ActiveJobs}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                        CornerRadius="6" 
                                        Padding="12" 
                                        Margin="0,0,0,8">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Name}" 
                                                   Style="{DynamicResource BodyTextBoldStyle}"
                                                   Foreground="{DynamicResource TextPrimaryBrush}"/>
                                        <ProgressBar Value="{Binding Progress}" Maximum="100"
                                                     Height="10" Margin="0,8,0,6"
                                                     Foreground="{DynamicResource AccentRedBrush}"
                                                     Background="{DynamicResource PrimaryDarkBrush}"/>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding StatusText}" 
                                                       Style="{DynamicResource BodyTextSmallStyle}"
                                                       Foreground="{DynamicResource TextSecondaryBrush}"/>
                                            <TextBlock Grid.Column="1" Text="{Binding ProgressText}" 
                                                       Style="{DynamicResource BodyTextBoldStyle}"
                                                       Foreground="{DynamicResource AccentRedBrush}"/>
                                        </Grid>
                                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                            <Button Content="Pause" Style="{DynamicResource SecondaryButtonStyle}"
                                                    Command="{Binding DataContext.PauseJobCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                    CommandParameter="{Binding}" Margin="0,0,8,0"/>
                                            <Button Content="Stop" Style="{DynamicResource DangerButtonStyle}"
                                                    Command="{Binding DataContext.CancelJobCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                    CommandParameter="{Binding}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
                
                <!-- Additional Sections omitted for brevity -->
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- Text to Image View - Novice Mode -->
    <DataTemplate x:Key="NoviceText2ImageViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🎨" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Create Images" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Describe what you want to see and we'll create it for you" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Border Grid.Row="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8" Padding="24">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Prompt Input -->
                    <StackPanel Grid.Row="0" Margin="0,0,0,20">
                        <TextBlock Text="What would you like to create?" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,8"/>
                        <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{DynamicResource DarkTextBoxStyle}"
                                 MinHeight="100"
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 FontSize="14"
                                 Tag="Describe your image in detail... (e.g., 'a beautiful sunset over mountains with orange and pink sky')"/>
                    </StackPanel>

                    <!-- Style Presets -->
                    <StackPanel Grid.Row="1" Margin="0,0,0,20">
                        <TextBlock Text="Choose a Style" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                        <ItemsControl ItemsSource="{Binding StylePresets}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                            BorderBrush="{DynamicResource BorderBrush}" 
                                            BorderThickness="2" 
                                            CornerRadius="8" 
                                            Padding="16,12" 
                                            Margin="0,0,12,8"
                                            MinWidth="120">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                <Setter Property="Background" Value="{DynamicResource SecondaryDarkBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="{DynamicResource AccentRedBrush}"/>
                                                        <Setter Property="Background" Value="{DynamicResource AccentRedBrush}"/>
                                                        <Setter Property="Opacity" Value="0.8"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Border.InputBindings>
                                            <MouseBinding Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.LoadPresetCommand}" 
                                                          CommandParameter="{Binding}" 
                                                          MouseAction="LeftClick"/>
                                        </Border.InputBindings>
                                        <TextBlock Text="{Binding}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextPrimaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   FontWeight="SemiBold"/>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- Size Selection -->
                    <StackPanel Grid.Row="2" Margin="0,0,0,20">
                        <TextBlock Text="Image Size" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                        <ComboBox ItemsSource="{Binding SizePresets}" 
                                  SelectedItem="{Binding SelectedSize}" 
                                  Style="{DynamicResource DarkComboBoxStyle}"
                                  FontSize="14"
                                  HorizontalAlignment="Left"
                                  MinWidth="150"/>
                    </StackPanel>

                    <!-- Preview Area -->
                    <Border Grid.Row="3" 
                            Background="{DynamicResource PrimaryDarkBrush}" 
                            BorderBrush="{DynamicResource BorderBrush}" 
                            BorderThickness="2" 
                            CornerRadius="8" 
                            Margin="0,0,0,20"
                            MinHeight="300">
                        <Grid>
                            <!-- Generated Image -->
                            <Image Source="{Binding GeneratedImageSource}" 
                                   Stretch="Uniform"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            
                            <!-- Empty State -->
                            <StackPanel HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                <TextBlock Text="🖼️" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                <TextBlock Text="Your image will appear here" 
                                           Style="{DynamicResource HeadingMediumStyle}" 
                                           Foreground="{DynamicResource TextMutedBrush}" 
                                           HorizontalAlignment="Center"/>
                                <TextBlock Text="Describe what you want and click Generate" 
                                           Style="{DynamicResource BodyTextStyle}" 
                                           Foreground="{DynamicResource TextMutedBrush}" 
                                           HorizontalAlignment="Center" 
                                           Margin="0,8,0,0"/>
                            </StackPanel>

                            <!-- Generation Progress -->
                            <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                    CornerRadius="8" 
                                    Padding="20" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <StackPanel HorizontalAlignment="Center">
                                    <TextBlock Text="🎨 Creating your image..." 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextPrimaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,0,0,12"/>
                                    <ProgressBar Value="{Binding GenerationProgress}" 
                                                 Width="300" 
                                                 Height="12" 
                                                 Background="{DynamicResource TertiaryDarkBrush}" 
                                                 Foreground="{DynamicResource AccentRedBrush}"/>
                                    <TextBlock Text="{Binding GenerationStatus}" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,0"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>

                    <!-- Action Buttons -->
                    <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="✨ Generate Image" 
                                Command="{Binding GenerateCommand}" 
                                Style="{DynamicResource PrimaryButtonStyle}" 
                                Padding="24,12" 
                                FontSize="16" 
                                FontWeight="SemiBold"
                                Margin="0,0,12,0"
                                IsEnabled="{Binding CanGenerate}"/>
                        <Button Content="⏹ Cancel" 
                                Command="{Binding CancelCommand}" 
                                Style="{DynamicResource SecondaryButtonStyle}" 
                                Padding="16,12" 
                                FontSize="14"
                                Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Button Content="💾 Save" 
                                Command="{Binding SaveImageCommand}" 
                                Style="{DynamicResource SecondaryButtonStyle}" 
                                Padding="16,12" 
                                FontSize="14"
                                Margin="12,0,0,0"
                                Visibility="{Binding HasGeneratedImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Image to Image View - Novice Mode -->
    <DataTemplate x:Key="NoviceImage2ImageViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🔄" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Transform Images" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Upload an image and transform it with AI" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Upload & Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,6,0">
                    <StackPanel>
                        <!-- Upload Area -->
                        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                BorderThickness="3" 
                                CornerRadius="12" 
                                Padding="30" 
                                Margin="0,0,0,20"
                                MinHeight="200"
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <!-- Upload State -->
                                <StackPanel Visibility="{Binding HasSourceImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="📁" FontSize="48" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                    <TextBlock Text="Drop your image here" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextPrimaryBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="or click to browse" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,16"/>
                                    <Button Content="📂 Choose Image" 
                                            Command="{Binding LoadImageCommand}" 
                                            Style="{DynamicResource PrimaryButtonStyle}" 
                                            Padding="16,10" 
                                            FontSize="14"/>
                                </StackPanel>

                                <!-- Image Preview -->
                                <StackPanel Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Image Source="{Binding SourceImageSource}" 
                                           MaxHeight="150" 
                                           Stretch="Uniform" 
                                           Margin="0,0,0,12"/>
                                    <TextBlock Text="{Binding SourceImageInfo}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,0,0,8"/>
                                    <Button Content="🗑️ Clear" 
                                            Command="{Binding ClearImageCommand}" 
                                            Style="{DynamicResource SecondaryButtonStyle}" 
                                            Padding="12,6"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>

                        <!-- Transformation Type -->
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock Text="What would you like to do?" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <ItemsControl ItemsSource="{Binding TransformationPresets}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                                BorderBrush="{DynamicResource BorderBrush}" 
                                                BorderThickness="2" 
                                                CornerRadius="8" 
                                                Padding="16,10" 
                                                Margin="0,0,8,8"
                                                MinWidth="100">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" Value="{DynamicResource AccentRedBrush}"/>
                                                            <Setter Property="Background" Value="{DynamicResource AccentRedBrush}"/>
                                                            <Setter Property="Opacity" Value="0.8"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Border.InputBindings>
                                                <MouseBinding Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.LoadPresetCommand}" 
                                                              CommandParameter="{Binding}" 
                                                              MouseAction="LeftClick"/>
                                            </Border.InputBindings>
                                            <TextBlock Text="{Binding}" 
                                                       Style="{DynamicResource BodyTextStyle}" 
                                                       Foreground="{DynamicResource TextPrimaryBrush}" 
                                                       HorizontalAlignment="Center" 
                                                       FontWeight="SemiBold"/>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <!-- Simple Prompt -->
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock Text="Describe the transformation" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,8"/>
                            <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{DynamicResource DarkTextBoxStyle}"
                                     MinHeight="80"
                                     TextWrapping="Wrap"
                                     AcceptsReturn="True"
                                     FontSize="14"
                                     Tag="Tell us how you want to change the image..."/>
                        </StackPanel>

                        <!-- Strength Slider -->
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock Text="Transformation Strength" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,8"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Subtle" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextMutedBrush}" VerticalAlignment="Center"/>
                                <Slider Grid.Column="1" 
                                        Value="{Binding Strength}" 
                                        Minimum="0.1" 
                                        Maximum="1.0" 
                                        TickFrequency="0.1" 
                                        TickPlacement="BottomRight" 
                                        Margin="12,0"/>
                                <TextBlock Grid.Column="2" Text="Strong" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextMutedBrush}" VerticalAlignment="Center"/>
                            </Grid>
                            <TextBlock Text="{Binding Strength, StringFormat='Strength: {0:P0}'}" 
                                       Style="{DynamicResource CaptionTextStyle}" 
                                       Foreground="{DynamicResource AccentRedBrush}" 
                                       HorizontalAlignment="Center" 
                                       Margin="0,6,0,0"/>
                        </StackPanel>

                        <!-- Generate Button -->
                        <Button Content="✨ Transform Image" 
                                Command="{Binding GenerateCommand}" 
                                Style="{DynamicResource PrimaryButtonStyle}" 
                                Padding="20,12" 
                                FontSize="16" 
                                FontWeight="SemiBold"
                                IsEnabled="{Binding CanGenerate}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Results -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="6,0,0,0">
                    <Grid>
                        <!-- Result Preview -->
                        <Border Background="{DynamicResource PrimaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="8" 
                                MinHeight="300">
                            <Grid>
                                <!-- Generated Image -->
                                <Image Source="{Binding GeneratedImageSource}" 
                                       Stretch="Uniform"
                                       Visibility="{Binding HasGeneratedImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasGeneratedImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎭" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Transformed image will appear here" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="Upload an image and choose a transformation" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Generation Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="8" 
                                        Padding="20" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center">
                                        <TextBlock Text="🔄 Transforming your image..." 
                                                   Style="{DynamicResource HeadingMediumStyle}" 
                                                   Foreground="{DynamicResource AccentRedBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <ProgressBar Value="{Binding GenerationProgress}" 
                                                     Width="300" 
                                                     Height="12" 
                                                     Background="{DynamicResource TertiaryDarkBrush}" 
                                                     Foreground="{DynamicResource AccentRedBrush}"/>
                                        <TextBlock Text="{Binding GenerationStatus}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,8,0,12"/>
                                        <Button Content="Cancel" 
                                                Command="{Binding CancelCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>

                                <!-- Result Actions -->
                                <StackPanel VerticalAlignment="Bottom" 
                                            HorizontalAlignment="Right" 
                                            Orientation="Horizontal" 
                                            Margin="16"
                                            Visibility="{Binding HasGeneratedImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="💾" 
                                            Command="{Binding SaveResultCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Save Result" 
                                            Margin="0,0,8,0"/>
                                    <Button Content="🔄" 
                                            Command="{Binding SwapImagesCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Use as Source"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Inpainting View - Novice Mode -->
    <DataTemplate x:Key="NoviceInpaintingViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🖌️" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Fix &amp; Fill Images" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Remove objects or fill areas in your images" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Upload & Simple Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,8,0">
                    <StackPanel>
                        <!-- Upload Area -->
                        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                BorderThickness="3" 
                                CornerRadius="12" 
                                Padding="24" 
                                Margin="0,0,0,20"
                                MinHeight="180"
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <StackPanel Visibility="{Binding HasSourceImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="📁" FontSize="40" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                    <TextBlock Text="Upload your image" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextPrimaryBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="We'll help you fix it" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,4,0,12"/>
                                    <Button Content="📂 Choose Image" 
                                            Command="{Binding LoadImageCommand}" 
                                            Style="{DynamicResource PrimaryButtonStyle}" 
                                            Padding="16,10" 
                                            FontSize="14"/>
                                </StackPanel>

                                <StackPanel Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Image Source="{Binding SourceImageSource}" MaxHeight="120" Stretch="Uniform" Margin="0,0,0,8"/>
                                    <TextBlock Text="{Binding SourceImageInfo}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>

                        <!-- What to do -->
                        <StackPanel Margin="0,0,0,20" Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="What would you like to do?" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <ItemsControl ItemsSource="{Binding InpaintingPresets}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                                BorderBrush="{DynamicResource BorderBrush}" 
                                                BorderThickness="2" 
                                                CornerRadius="8" 
                                                Padding="16,12" 
                                                Margin="0,0,0,8">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" Value="{DynamicResource AccentRedBrush}"/>
                                                            <Setter Property="Background" Value="{DynamicResource AccentRedBrush}"/>
                                                            <Setter Property="Opacity" Value="0.8"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Border.InputBindings>
                                                <MouseBinding Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.LoadPresetCommand}" 
                                                              CommandParameter="{Binding}" 
                                                              MouseAction="LeftClick"/>
                                            </Border.InputBindings>
                                            <TextBlock Text="{Binding}" 
                                                       Style="{DynamicResource BodyTextStyle}" 
                                                       Foreground="{DynamicResource TextPrimaryBrush}" 
                                                       HorizontalAlignment="Center" 
                                                       FontWeight="SemiBold"/>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <!-- Auto-Detection -->
                        <StackPanel Margin="0,0,0,20" Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8" Padding="16">
                                <StackPanel>
                                    <TextBlock Text="🤖 Smart Detection" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource AccentRedBrush}" Margin="0,0,0,8"/>
                                    <TextBlock Text="Let AI find objects automatically" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,0,0,12"/>
                                    <Button Content="🔍 Detect Objects" 
                                            Command="{Binding DetectObjectsCommand}" 
                                            Style="{DynamicResource PrimaryButtonStyle}" 
                                            Padding="0,10" 
                                            FontSize="14"
                                            IsEnabled="{Binding HasSourceImage}"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Simple Prompt -->
                        <StackPanel Margin="0,0,0,20" Visibility="{Binding HasMask, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="What should go here instead?" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,8"/>
                            <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{DynamicResource DarkTextBoxStyle}"
                                     MinHeight="80"
                                     TextWrapping="Wrap"
                                     AcceptsReturn="True"
                                     FontSize="14"
                                     Tag="Describe what should replace the selected area..."/>
                        </StackPanel>

                        <!-- Generate Button -->
                        <Button Content="✨ Fix Image" 
                                Command="{Binding GenerateCommand}" 
                                Style="{DynamicResource PrimaryButtonStyle}" 
                                Padding="20,12" 
                                FontSize="16" 
                                FontWeight="SemiBold"
                                IsEnabled="{Binding CanGenerate}"
                                Visibility="{Binding HasMask, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Canvas & Results -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Canvas Controls -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12" Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="🖌️ Paint to select areas" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" VerticalAlignment="Center" Margin="0,0,16,0"/>
                            <Button Content="Small Brush" Command="{Binding SetBrushPresetCommand}" CommandParameter="Small" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,6,0"/>
                            <Button Content="Medium Brush" Command="{Binding SetBrushPresetCommand}" CommandParameter="Medium" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,6,0"/>
                            <Button Content="Large Brush" Command="{Binding SetBrushPresetCommand}" CommandParameter="Large" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,12,0"/>
                            <Button Content="🗑️ Clear" Command="{Binding ClearMaskCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                        </StackPanel>

                        <!-- Canvas Area -->
                        <Border Grid.Row="1" 
                                Background="{DynamicResource PrimaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="8">
                            <Grid>
                                <!-- Source Image -->
                                <Image Source="{Binding SourceImageSource}" 
                                       Stretch="Uniform"
                                       Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                <!-- Mask Overlay -->
                                <Image Source="{Binding MaskImageSource}" 
                                       Stretch="Uniform" 
                                       Opacity="0.6"
                                       Visibility="{Binding HasMask, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasSourceImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🖼️" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Upload an image to start" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="Then paint to select areas to fix" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Result Preview -->
                                <Image Source="{Binding GeneratedImageSource}" 
                                       Stretch="Uniform"
                                       Visibility="{Binding HasGeneratedImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                <!-- Generation Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="8" 
                                        Padding="20" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center">
                                        <TextBlock Text="🖌️ Fixing your image..." 
                                                   Style="{DynamicResource HeadingMediumStyle}" 
                                                   Foreground="{DynamicResource AccentRedBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <ProgressBar Value="{Binding GenerationProgress}" 
                                                     Width="300" 
                                                     Height="12" 
                                                     Background="{DynamicResource TertiaryDarkBrush}" 
                                                     Foreground="{DynamicResource AccentRedBrush}"/>
                                        <TextBlock Text="{Binding GenerationStatus}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,8,0,12"/>
                                        <Button Content="Cancel" 
                                                Command="{Binding CancelCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>

                                <!-- Result Actions -->
                                <StackPanel VerticalAlignment="Bottom" 
                                            HorizontalAlignment="Right" 
                                            Orientation="Horizontal" 
                                            Margin="16"
                                            Visibility="{Binding HasGeneratedImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="💾" 
                                            Command="{Binding SaveResultCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Save Result" 
                                            Margin="0,0,8,0"/>
                                    <Button Content="🔄" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Try Again"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Upscaling View - Novice Mode -->
    <DataTemplate x:Key="NoviceUpscalingViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🔍" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Enhance Images" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Make your images bigger and sharper with AI" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Upload & Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,8,0">
                    <StackPanel>
                        <!-- Upload Area -->
                        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                BorderThickness="3" 
                                CornerRadius="12" 
                                Padding="30" 
                                Margin="0,0,0,24"
                                MinHeight="200"
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <StackPanel Visibility="{Binding HasSourceImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="📁" FontSize="48" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                    <TextBlock Text="Upload your image" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextPrimaryBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="We'll make it bigger and sharper" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,16"/>
                                    <Button Content="📂 Choose Image" 
                                            Command="{Binding LoadImageCommand}" 
                                            Style="{DynamicResource PrimaryButtonStyle}" 
                                            Padding="16,12" 
                                            FontSize="14"/>
                                </StackPanel>

                                <StackPanel Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Image Source="{Binding SourceImageSource}" MaxHeight="140" Stretch="Uniform" Margin="0,0,0,12"/>
                                    <TextBlock Text="{Binding SourceImageInfo}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,0,0,8"/>
                                    <Button Content="🗑️ Clear" 
                                            Command="{Binding ClearImageCommand}" 
                                            Style="{DynamicResource SecondaryButtonStyle}" 
                                            Padding="12,6"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>

                        <!-- Scale Selection -->
                        <StackPanel Margin="0,0,0,24" Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="How much bigger?" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <Button Grid.Column="0" 
                                        Content="2x Bigger" 
                                        Command="{Binding SetScaleFactorCommand}" 
                                        CommandParameter="2" 
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="16,20" 
                                        FontSize="14" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,8,0"/>
                                <Button Grid.Column="1" 
                                        Content="4x Bigger" 
                                        Command="{Binding SetScaleFactorCommand}" 
                                        CommandParameter="4" 
                                        Style="{DynamicResource PrimaryButtonStyle}" 
                                        Padding="16,20" 
                                        FontSize="14" 
                                        FontWeight="SemiBold"
                                        Margin="4,0"/>
                                <Button Grid.Column="2" 
                                        Content="8x Bigger" 
                                        Command="{Binding SetScaleFactorCommand}" 
                                        CommandParameter="8" 
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="16,20" 
                                        FontSize="14" 
                                        FontWeight="SemiBold"
                                        Margin="8,0,0,0"/>
                            </Grid>
                            
                            <!-- Selected Scale Info -->
                            <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="6" Padding="12" Margin="0,12,0,0">
                                <StackPanel>
                                    <TextBlock Text="{Binding ScaleFactorText, StringFormat='Selected: {0} scale'}" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               FontWeight="SemiBold" 
                                               Foreground="{DynamicResource AccentRedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding EstimatedOutputSize, StringFormat='Output size: {0}'}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,4,0,0"/>
                                    <TextBlock Text="{Binding EstimatedTime, StringFormat='Estimated time: {0}'}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Generate Button -->
                        <Button Content="✨ Enhance Image" 
                                Command="{Binding UpscaleCommand}" 
                                Style="{DynamicResource PrimaryButtonStyle}" 
                                Padding="24,16" 
                                FontSize="16" 
                                FontWeight="SemiBold"
                                IsEnabled="{Binding CanUpscale}"
                                Visibility="{Binding HasSourceImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Results -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <!-- Result Preview -->
                        <Border Background="{DynamicResource PrimaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="8" 
                                MinHeight="400">
                            <Grid>
                                <!-- Upscaled Image -->
                                <Image Source="{Binding UpscaledImageSource}" 
                                       Stretch="Uniform"
                                       Visibility="{Binding HasUpscaledImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasUpscaledImage, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🔍" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Enhanced image will appear here" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="Upload an image and choose a scale" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Processing Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="8" 
                                        Padding="24" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsUpscaling, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center" MinWidth="350">
                                        <TextBlock Text="🔍 Enhancing your image..." 
                                                   Style="{DynamicResource HeadingMediumStyle}" 
                                                   Foreground="{DynamicResource AccentRedBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Grid Margin="0,0,0,8">
                                            <ProgressBar Value="{Binding UpscalingProgress}" 
                                                         Height="12" 
                                                         Background="{DynamicResource TertiaryDarkBrush}" 
                                                         Foreground="{DynamicResource AccentRedBrush}"/>
                                            <TextBlock Text="{Binding UpscalingProgress, StringFormat='{}{0:F0}%'}" 
                                                       Style="{DynamicResource CaptionTextStyle}" 
                                                       Foreground="{DynamicResource TextPrimaryBrush}" 
                                                       HorizontalAlignment="Center" 
                                                       VerticalAlignment="Center" 
                                                       FontWeight="SemiBold"/>
                                        </Grid>
                                        <TextBlock Text="{Binding UpscalingStatus}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Button Content="Cancel" 
                                                Command="{Binding CancelCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>

                                <!-- Result Actions -->
                                <StackPanel VerticalAlignment="Bottom" 
                                            HorizontalAlignment="Right" 
                                            Orientation="Horizontal" 
                                            Margin="16"
                                            Visibility="{Binding HasUpscaledImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="💾" 
                                            Command="{Binding SaveResultCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Save Enhanced Image" 
                                            Margin="0,0,8,0"/>
                                    <Button Content="📤" 
                                            Command="{Binding ExportResultCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Export"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Text2Video View - Novice Mode -->
    <DataTemplate x:Key="NoviceText2VideoViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🎬" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Create Videos" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Turn your ideas into amazing videos with AI" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,8,0">
                    <StackPanel>
                        <!-- Prompt Input -->
                        <StackPanel Margin="0,0,0,24">
                            <TextBlock Text="Describe your video" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8" Padding="16" BorderBrush="{DynamicResource AccentRedBrush}" BorderThickness="2">
                                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                                         TextWrapping="Wrap" 
                                         AcceptsReturn="True" 
                                         MinHeight="80" 
                                         FontSize="14"
                                         Background="Transparent" 
                                         BorderThickness="0" 
                                         Foreground="{DynamicResource TextPrimaryBrush}"
                                         CaretBrush="{DynamicResource AccentRedBrush}"/>
                            </Border>
                            <TextBlock Text="Example: A cat walking through a sunny garden" 
                                       Style="{DynamicResource CaptionTextStyle}" 
                                       Foreground="{DynamicResource TextMutedBrush}" 
                                       Margin="8,8,0,0"/>
                        </StackPanel>

                        <!-- Style Selection -->
                        <StackPanel Margin="0,0,0,24">
                            <TextBlock Text="Choose a style" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Row 1 -->
                                <Button Grid.Column="0" Grid.Row="0"
                                        Content="🎭 Cinematic" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Cinematic"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,4,8"/>
                                <Button Grid.Column="1" Grid.Row="0"
                                        Content="🎨 Animation" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Animation"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="2,0,2,8"/>
                                <Button Grid.Column="2" Grid.Row="0"
                                        Content="📷 Realistic" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Realistic"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="4,0,0,8"/>
                                
                                <!-- Row 2 -->
                                <Button Grid.Column="0" Grid.Row="1"
                                        Content="🎪 Artistic" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Artistic"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,4,0"/>
                                <Button Grid.Column="1" Grid.Row="1"
                                        Content="🕰️ Vintage" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Vintage"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="2,0"/>
                                <Button Grid.Column="2" Grid.Row="1"
                                        Content="🚀 Sci-Fi" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Sci-Fi"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="4,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Duration Selection -->
                        <StackPanel Margin="0,0,0,24">
                            <TextBlock Text="Video length" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <Button Grid.Column="0" 
                                        Content="3 seconds" 
                                        Command="{Binding SetDurationCommand}" 
                                        CommandParameter="3" 
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="16,12" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,4,0"/>
                                <Button Grid.Column="1" 
                                        Content="5 seconds" 
                                        Command="{Binding SetDurationCommand}" 
                                        CommandParameter="5" 
                                        Style="{DynamicResource PrimaryButtonStyle}" 
                                        Padding="16,12" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="2,0"/>
                                <Button Grid.Column="2" 
                                        Content="10 seconds" 
                                        Command="{Binding SetDurationCommand}" 
                                        CommandParameter="10" 
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="16,12" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="4,0,0,0"/>
                            </Grid>
                            
                            <!-- Selected Duration Info -->
                            <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="6" Padding="12" Margin="0,12,0,0">
                                <StackPanel>
                                    <TextBlock Text="{Binding DurationSeconds, StringFormat='Selected: {0:F0} seconds'}" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               FontWeight="SemiBold" 
                                               Foreground="{DynamicResource AccentRedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding EstimatedTimeText, StringFormat='Generation time: {0}'}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,4,0,0"/>
                                    <TextBlock Text="{Binding FileSizeText, StringFormat='File size: {0}'}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,2,0,0"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Generate Button -->
                        <Button Content="🎬 Create Video" 
                                Command="{Binding GenerateCommand}" 
                                Style="{DynamicResource PrimaryButtonStyle}" 
                                Padding="24,16" 
                                FontSize="16" 
                                FontWeight="SemiBold"
                                IsEnabled="{Binding CanGenerate}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Preview & Results -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <!-- Video Preview -->
                        <Border Background="{DynamicResource PrimaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="8" 
                                MinHeight="400">
                            <Grid>
                                <!-- Generated Video -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎬" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Foreground="{DynamicResource AccentRedBrush}"/>
                                    <TextBlock Text="Video Ready!" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextPrimaryBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding VideoInfoText}" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,16"/>
                                    
                                    <!-- Video Controls -->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="▶️" 
                                                Command="{Binding PlayCommand}" 
                                                Style="{DynamicResource PrimaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="16" 
                                                Margin="0,0,8,0"/>
                                        <Button Content="⏸️" 
                                                Command="{Binding PauseCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="16" 
                                                Margin="0,0,8,0"/>
                                        <Button Content="⏹️" 
                                                Command="{Binding StopCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="16"/>
                                    </StackPanel>
                                </StackPanel>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasGeneratedVideo, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎬" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Your video will appear here" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="Write a description and choose a style" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Generation Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="8" 
                                        Padding="24" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsGenerating, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center" MinWidth="350">
                                        <TextBlock Text="🎬 Creating your video..." 
                                                   Style="{DynamicResource HeadingMediumStyle}" 
                                                   Foreground="{DynamicResource AccentRedBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Grid Margin="0,0,0,8">
                                            <ProgressBar Value="{Binding GenerationProgress}" 
                                                         Height="12" 
                                                         Background="{DynamicResource TertiaryDarkBrush}" 
                                                         Foreground="{DynamicResource AccentRedBrush}"/>
                                            <TextBlock Text="{Binding GenerationProgress, StringFormat='{}{0:F0}%'}" 
                                                       Style="{DynamicResource CaptionTextStyle}" 
                                                       Foreground="{DynamicResource TextPrimaryBrush}" 
                                                       HorizontalAlignment="Center" 
                                                       VerticalAlignment="Center" 
                                                       FontWeight="SemiBold"/>
                                        </Grid>
                                        <TextBlock Text="{Binding GenerationStatus}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Button Content="Cancel" 
                                                Command="{Binding CancelCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>

                                <!-- Save Actions -->
                                <StackPanel VerticalAlignment="Bottom" 
                                            HorizontalAlignment="Right" 
                                            Orientation="Horizontal" 
                                            Margin="16"
                                            Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="💾" 
                                            Command="{Binding SaveCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Save Video" 
                                            Margin="0,0,8,0"/>
                                    <Button Content="📤" 
                                            Command="{Binding ExportCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Export"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Video2Video View - Novice Mode -->
    <DataTemplate x:Key="NoviceVideo2VideoViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🎞️" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Transform Videos" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Change the style of your videos with AI" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,8,0">
                    <StackPanel>
                        <!-- Video Upload -->
                        <StackPanel Margin="0,0,0,24">
                            <TextBlock Text="Upload your video" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                    BorderBrush="{DynamicResource AccentRedBrush}" 
                                    BorderThickness="3" 
                                    CornerRadius="12" 
                                    Padding="30" 
                                    MinHeight="160"
                                    AllowDrop="True">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel Visibility="{Binding HasSourceVideo, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                        <TextBlock Text="🎞️" FontSize="48" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                        <TextBlock Text="Drop video here" 
                                                   Style="{DynamicResource HeadingMediumStyle}" 
                                                   Foreground="{DynamicResource TextPrimaryBrush}" 
                                                   HorizontalAlignment="Center"/>
                                        <TextBlock Text="or click to browse" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,8,0,16"/>
                                        <Button Content="📂 Choose Video" 
                                                Command="{Binding LoadVideoCommand}" 
                                                Style="{DynamicResource PrimaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="14"/>
                                    </StackPanel>

                                    <StackPanel Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock Text="🎞️" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8" Foreground="{DynamicResource AccentRedBrush}"/>
                                        <TextBlock Text="{Binding SourceVideoInfo}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Button Content="🗑️ Clear" 
                                                Command="{Binding ClearVideoCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}" 
                                                Padding="12,6"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Transformation Input -->
                        <StackPanel Margin="0,0,0,24" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Describe the transformation" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8" Padding="16" BorderBrush="{DynamicResource AccentRedBrush}" BorderThickness="2">
                                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                                         TextWrapping="Wrap" 
                                         AcceptsReturn="True" 
                                         MinHeight="60" 
                                         FontSize="14"
                                         Background="Transparent" 
                                         BorderThickness="0" 
                                         Foreground="{DynamicResource TextPrimaryBrush}"
                                         CaretBrush="{DynamicResource AccentRedBrush}"/>
                            </Border>
                            <TextBlock Text="Example: Make it look like a cartoon" 
                                       Style="{DynamicResource CaptionTextStyle}" 
                                       Foreground="{DynamicResource TextMutedBrush}" 
                                       Margin="8,8,0,0"/>
                        </StackPanel>

                        <!-- Style Presets -->
                        <StackPanel Margin="0,0,0,24" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Choose a style" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Row 1 -->
                                <Button Grid.Column="0" Grid.Row="0"
                                        Content="🎨 Cartoon" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Cartoon"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,4,8"/>
                                <Button Grid.Column="1" Grid.Row="0"
                                        Content="📷 Realistic" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Realistic"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="2,0,2,8"/>
                                <Button Grid.Column="2" Grid.Row="0"
                                        Content="🎭 Art Style" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Art Style"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="4,0,0,8"/>
                                
                                <!-- Row 2 -->
                                <Button Grid.Column="0" Grid.Row="1"
                                        Content="🌸 Anime" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Anime"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,4,0"/>
                                <Button Grid.Column="1" Grid.Row="1"
                                        Content="🖼️ Oil Painting" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Oil Painting"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="2,0"/>
                                <Button Grid.Column="2" Grid.Row="1"
                                        Content="✏️ Sketch" 
                                        Command="{Binding SetStyleCommand}" 
                                        CommandParameter="Sketch"
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="12,16" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="4,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Strength Control -->
                        <StackPanel Margin="0,0,0,24" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Transformation strength" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <Button Grid.Column="0" 
                                        Content="Subtle" 
                                        Command="{Binding SetStrengthCommand}" 
                                        CommandParameter="0.4" 
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="16,12" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="0,0,4,0"/>
                                <Button Grid.Column="1" 
                                        Content="Balanced" 
                                        Command="{Binding SetStrengthCommand}" 
                                        CommandParameter="0.8" 
                                        Style="{DynamicResource PrimaryButtonStyle}" 
                                        Padding="16,12" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="2,0"/>
                                <Button Grid.Column="2" 
                                        Content="Strong" 
                                        Command="{Binding SetStrengthCommand}" 
                                        CommandParameter="1.2" 
                                        Style="{DynamicResource SecondaryButtonStyle}" 
                                        Padding="16,12" 
                                        FontSize="13" 
                                        FontWeight="SemiBold"
                                        Margin="4,0,0,0"/>
                            </Grid>
                            
                            <!-- Strength Info -->
                            <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="6" Padding="12" Margin="0,12,0,0">
                                <StackPanel>
                                    <TextBlock Text="{Binding Strength, StringFormat='Strength: {0:F1}'}" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               FontWeight="SemiBold" 
                                               Foreground="{DynamicResource AccentRedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding ProcessingTimeText, StringFormat='Processing time: {0}'}" 
                                               Style="{DynamicResource CaptionTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,4,0,0"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Transform Button -->
                        <Button Content="🎞️ Transform Video" 
                                Command="{Binding ProcessVideoCommand}" 
                                Style="{DynamicResource PrimaryButtonStyle}" 
                                Padding="24,16" 
                                FontSize="16" 
                                FontWeight="SemiBold"
                                IsEnabled="{Binding CanProcess}"
                                Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Preview -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <!-- Video Preview -->
                        <Border Background="{DynamicResource PrimaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="8" 
                                MinHeight="400">
                            <Grid>
                                <!-- Transformed Video Result -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasOutputVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎞️" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Foreground="{DynamicResource AccentRedBrush}"/>
                                    <TextBlock Text="Video Transformed!" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextPrimaryBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding SourceVideoInfo}" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextSecondaryBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,16"/>
                                    
                                    <!-- Video Controls -->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="▶️ Source" 
                                                Command="{Binding PlaySourceCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="14" 
                                                Margin="0,0,8,0"/>
                                        <Button Content="▶️ Result" 
                                                Command="{Binding PlayOutputCommand}" 
                                                Style="{DynamicResource PrimaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="14" 
                                                Margin="0,0,8,0"/>
                                        <Button Content="⚖️ Compare" 
                                                Command="{Binding CompareCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}" 
                                                Padding="16,12" 
                                                FontSize="14"/>
                                    </StackPanel>
                                </StackPanel>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Visibility="{Binding HasOutputVideo, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎞️" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Transformed video will appear here" 
                                               Style="{DynamicResource HeadingMediumStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center"/>
                                    <TextBlock Text="Upload a video and choose a style" 
                                               Style="{DynamicResource BodyTextStyle}" 
                                               Foreground="{DynamicResource TextMutedBrush}" 
                                               HorizontalAlignment="Center" 
                                               Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Processing Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="8" 
                                        Padding="24" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center" MinWidth="350">
                                        <TextBlock Text="🎞️ Transforming your video..." 
                                                   Style="{DynamicResource HeadingMediumStyle}" 
                                                   Foreground="{DynamicResource AccentRedBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Grid Margin="0,0,0,8">
                                            <ProgressBar Value="{Binding ProcessingProgress}" 
                                                         Height="12" 
                                                         Background="{DynamicResource TertiaryDarkBrush}" 
                                                         Foreground="{DynamicResource AccentRedBrush}"/>
                                            <TextBlock Text="{Binding ProcessingProgress, StringFormat='{}{0:F0}%'}" 
                                                       Style="{DynamicResource CaptionTextStyle}" 
                                                       Foreground="{DynamicResource TextPrimaryBrush}" 
                                                       HorizontalAlignment="Center" 
                                                       VerticalAlignment="Center" 
                                                       FontWeight="SemiBold"/>
                                        </Grid>
                                        <TextBlock Text="{Binding ProcessingStatus}" 
                                                   Style="{DynamicResource BodyTextStyle}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   HorizontalAlignment="Center" 
                                                   Margin="0,0,0,12"/>
                                        <Button Content="Cancel" 
                                                Command="{Binding CancelCommand}" 
                                                Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>

                                <!-- Save Actions -->
                                <StackPanel VerticalAlignment="Bottom" 
                                            HorizontalAlignment="Right" 
                                            Orientation="Horizontal" 
                                            Margin="16"
                                            Visibility="{Binding HasOutputVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="💾" 
                                            Command="{Binding SaveCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Save Video" 
                                            Margin="0,0,8,0"/>
                                    <Button Content="📤" 
                                            Command="{Binding ExportCommand}" 
                                            Style="{DynamicResource GhostButtonStyle}" 
                                            ToolTip="Export"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- MotionControl View - Novice Mode -->
    <DataTemplate x:Key="NoviceMotionControlViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🎥" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Camera Motion" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Add cinematic camera movements to your videos" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,8,0">
                    <StackPanel>
                        <!-- Video Upload -->
                        <StackPanel Margin="0,0,0,24">
                            <TextBlock Text="Upload your video" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <Border Background="{DynamicResource SecondaryDarkBrush}" BorderBrush="{DynamicResource AccentRedBrush}" BorderThickness="3" CornerRadius="12" Padding="30" MinHeight="120" AllowDrop="True">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel Visibility="{Binding HasSourceVideo, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                        <TextBlock Text="🎥" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                                        <Button Content="📂 Choose Video" Command="{Binding LoadVideoCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="16,12"/>
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock Text="🎥" FontSize="24" HorizontalAlignment="Center" Margin="0,0,0,6" Foreground="{DynamicResource AccentRedBrush}"/>
                                        <TextBlock Text="Video Loaded" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Camera Movement Presets -->
                        <StackPanel Margin="0,0,0,24" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Choose camera movement" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Row 1 -->
                                <Button Grid.Column="0" Grid.Row="0" Content="⬅️ Pan Left" Command="{Binding SetCameraMovementCommand}" CommandParameter="Pan Left" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="0,0,4,8"/>
                                <Button Grid.Column="1" Grid.Row="0" Content="➡️ Pan Right" Command="{Binding SetCameraMovementCommand}" CommandParameter="Pan Right" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="2,0,2,8"/>
                                <Button Grid.Column="2" Grid.Row="0" Content="🔍 Zoom In" Command="{Binding SetCameraMovementCommand}" CommandParameter="Zoom In" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="4,0,0,8"/>
                                
                                <!-- Row 2 -->
                                <Button Grid.Column="0" Grid.Row="1" Content="🔍 Zoom Out" Command="{Binding SetCameraMovementCommand}" CommandParameter="Zoom Out" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="0,0,4,8"/>
                                <Button Grid.Column="1" Grid.Row="1" Content="🌀 Orbit" Command="{Binding SetCameraMovementCommand}" CommandParameter="Orbit Right" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="2,0,2,8"/>
                                <Button Grid.Column="2" Grid.Row="1" Content="📹 Dolly" Command="{Binding SetCameraMovementCommand}" CommandParameter="Dolly Forward" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="4,0,0,8"/>
                                
                                <!-- Row 3 -->
                                <Button Grid.Column="0" Grid.Row="2" Content="⬆️ Tilt Up" Command="{Binding SetCameraMovementCommand}" CommandParameter="Tilt Up" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="0,0,4,0"/>
                                <Button Grid.Column="1" Grid.Row="2" Content="⬇️ Tilt Down" Command="{Binding SetCameraMovementCommand}" CommandParameter="Tilt Down" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="2,0"/>
                                <Button Grid.Column="2" Grid.Row="2" Content="🎬 Static" Command="{Binding SetCameraMovementCommand}" CommandParameter="Static" Style="{DynamicResource PrimaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="4,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Apply Motion Button -->
                        <Button Content="🎥 Apply Motion" Command="{Binding ApplyMotionCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="24,16" FontSize="16" FontWeight="SemiBold" IsEnabled="{Binding CanApplyMotion}" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Motion Preview -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <!-- Motion Preview -->
                        <Border Background="{DynamicResource PrimaryDarkBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="2" CornerRadius="8" MinHeight="400">
                            <Grid>
                                <!-- Motion Path Visualization -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding HasMotionPath, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎥" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Foreground="{DynamicResource AccentRedBrush}"/>
                                    <TextBlock Text="Motion Path Ready!" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextPrimaryBrush}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding MotionSummary}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,8,0,16"/>
                                    <Button Content="👁️ Preview Motion" Command="{Binding PreviewMotionCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="16,12"/>
                                </StackPanel>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding HasMotionPath, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎥" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Motion preview will appear here" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Upload a video and choose a camera movement" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Processing Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8" Padding="24" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center" MinWidth="300">
                                        <TextBlock Text="🎥 Applying motion..." Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource AccentRedBrush}" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                        <Grid Margin="0,0,0,8">
                                            <ProgressBar Value="{Binding ProcessingProgress}" Height="12" Background="{DynamicResource TertiaryDarkBrush}" Foreground="{DynamicResource AccentRedBrush}"/>
                                            <TextBlock Text="{Binding ProcessingProgress, StringFormat='{}{0:F0}%'}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextPrimaryBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                        </Grid>
                                        <TextBlock Text="{Binding ProcessingStatus}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                        <Button Content="Cancel" Command="{Binding CancelCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- TemporalEffects View - Novice Mode -->
    <DataTemplate x:Key="NoviceTemporalEffectsViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="⏱️" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="Time Effects" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Change video speed and add smooth effects" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Controls -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="20" Margin="0,0,8,0">
                    <StackPanel>
                        <!-- Video Upload -->
                        <StackPanel Margin="0,0,0,24">
                            <TextBlock Text="Upload your video" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,12"/>
                            <Border Background="{DynamicResource SecondaryDarkBrush}" BorderBrush="{DynamicResource AccentRedBrush}" BorderThickness="3" CornerRadius="12" Padding="30" MinHeight="120" AllowDrop="True">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <StackPanel Visibility="{Binding HasSourceVideo, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                        <TextBlock Text="⏱️" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                                        <Button Content="📂 Choose Video" Command="{Binding LoadVideoCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="16,12"/>
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBlock Text="⏱️" FontSize="24" HorizontalAlignment="Center" Margin="0,0,0,6" Foreground="{DynamicResource AccentRedBrush}"/>
                                        <TextBlock Text="Video Loaded" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>

                        <!-- Speed Effect Presets -->
                        <StackPanel Margin="0,0,0,24" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="Choose speed effect" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Row 1 -->
                                <Button Grid.Column="0" Grid.Row="0" Content="🐌 Slow Mo" Command="{Binding SetSpeedPresetCommand}" CommandParameter="Slow Motion (0.5x)" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="0,0,4,8"/>
                                <Button Grid.Column="1" Grid.Row="0" Content="🏃 Normal" Command="{Binding SetSpeedPresetCommand}" CommandParameter="Normal (1x)" Style="{DynamicResource PrimaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="2,0,2,8"/>
                                <Button Grid.Column="2" Grid.Row="0" Content="⚡ Fast" Command="{Binding SetSpeedPresetCommand}" CommandParameter="Fast (2x)" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="4,0,0,8"/>
                                
                                <!-- Row 2 -->
                                <Button Grid.Column="0" Grid.Row="1" Content="🕐 Time Lapse" Command="{Binding SetSpeedPresetCommand}" CommandParameter="Time Lapse (4x)" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="0,0,4,0"/>
                                <Button Grid.Column="1" Grid.Row="1" Content="📽️ Smooth 60fps" Command="{Binding SetSpeedPresetCommand}" CommandParameter="Smooth 60fps" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="2,0"/>
                                <Button Grid.Column="2" Grid.Row="1" Content="🎯 Stabilize" Command="{Binding SetSpeedPresetCommand}" CommandParameter="Stabilize" Style="{DynamicResource SecondaryButtonStyle}" Padding="12,16" FontSize="12" FontWeight="SemiBold" Margin="4,0,0,0"/>
                            </Grid>
                        </StackPanel>

                        <!-- Apply Effect Button -->
                        <Button Content="⏱️ Apply Effect" Command="{Binding ApplyEffectCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="24,16" FontSize="16" FontWeight="SemiBold" IsEnabled="{Binding CanApplyEffect}" Visibility="{Binding HasSourceVideo, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </Border>

                <!-- Right Panel: Preview -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <!-- Effect Preview -->
                        <Border Background="{DynamicResource PrimaryDarkBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="2" CornerRadius="8" MinHeight="400">
                            <Grid>
                                <!-- Effect Result -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding HasPreview, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="⏱️" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Foreground="{DynamicResource AccentRedBrush}"/>
                                    <TextBlock Text="Effect Applied!" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextPrimaryBrush}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding SpeedText, StringFormat='Speed: {0}'}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,8,0,16"/>
                                    <Button Content="▶️ Play Preview" Style="{DynamicResource PrimaryButtonStyle}" Padding="16,12"/>
                                </StackPanel>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding HasPreview, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="⏱️" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="Effect preview will appear here" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Upload a video and choose an effect" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Processing Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8" Padding="24" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center" MinWidth="300">
                                        <TextBlock Text="⏱️ Processing effect..." Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource AccentRedBrush}" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                        <Grid Margin="0,0,0,8">
                                            <ProgressBar Value="{Binding ProcessingProgress}" Height="12" Background="{DynamicResource TertiaryDarkBrush}" Foreground="{DynamicResource AccentRedBrush}"/>
                                            <TextBlock Text="{Binding ProcessingProgress, StringFormat='{}{0:F0}%'}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextPrimaryBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                        </Grid>
                                        <TextBlock Text="{Binding ProcessingStatus}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                        <Button Content="Cancel" Command="{Binding CancelCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Border>

                                <!-- Export Actions -->
                                <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal" Margin="16" Visibility="{Binding HasPreview, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="💾" Command="{Binding ExportEffectCommand}" Style="{DynamicResource GhostButtonStyle}" ToolTip="Export Video" Margin="0,0,8,0"/>
                                    <Button Content="🔄" Command="{Binding ResetEffectCommand}" Style="{DynamicResource GhostButtonStyle}" ToolTip="Reset"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- ThreeDModels View - Novice Mode -->
    <DataTemplate x:Key="NoviceThreeDModelsViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="12,12,12,16">
                <TextBlock Text="🎯" FontSize="28" Margin="0,0,12,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel>
                    <TextBlock Text="3D Models" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                    <TextBlock Text="Browse and view your 3D model collection" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,4,0,0"/>
                </StackPanel>
            </StackPanel>

            <!-- Main Content -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Panel: Model Library -->
                <Border Grid.Column="0" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8,0,0,8" Padding="16" Margin="0,0,8,0">
                    <StackPanel>
                        <TextBlock Text="📚 Model Library" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource AccentRedBrush}" Margin="0,0,0,16"/>

                        <!-- Import Button -->
                        <Button Content="📥 Import Model" Command="{Binding ImportModelCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="0,12" FontSize="14" FontWeight="SemiBold" Margin="0,0,0,16"/>

                        <!-- Categories -->
                        <StackPanel Margin="0,0,0,16">
                            <TextBlock Text="Categories" Style="{DynamicResource BodyTextStyle}" FontWeight="SemiBold" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,8"/>
                            <ItemsControl ItemsSource="{Binding ModelCategories}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding}" Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetCategoryCommand}" CommandParameter="{Binding}" Style="{DynamicResource GhostButtonStyle}" Padding="8,4" Margin="0,0,4,4"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <!-- Model List -->
                        <TextBlock Text="Models" Style="{DynamicResource BodyTextStyle}" FontWeight="SemiBold" Foreground="{DynamicResource TextPrimaryBrush}" Margin="0,0,0,8"/>
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding FilteredModels}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="6" Padding="12" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Margin="0,0,0,4">
                                            <StackPanel>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="40"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="🎯" FontSize="20" VerticalAlignment="Center" Foreground="{DynamicResource AccentRedBrush}"/>
                                                    <StackPanel Grid.Column="1" Margin="8,0,0,0">
                                                        <TextBlock Text="{Binding Name}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextPrimaryBrush}" FontWeight="SemiBold"/>
                                                        <TextBlock Text="{Binding Category}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}"/>
                                                    </StackPanel>
                                                    <TextBlock Grid.Column="2" Text="{Binding Format}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextMutedBrush}" VerticalAlignment="Center"/>
                                                </Grid>
                                                <TextBlock Text="{Binding ModelInfo}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextMutedBrush}" Margin="0,4,0,0"/>
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </StackPanel>
                </Border>

                <!-- Right Panel: 3D Viewport -->
                <Border Grid.Column="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="0,8,8,0" Padding="20" Margin="8,0,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- 3D Viewport -->
                        <Border Grid.Row="0" Background="{DynamicResource PrimaryDarkBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="2" CornerRadius="8" MinHeight="400">
                            <Grid>
                                <!-- Model Viewer -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding HasSelectedModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎯" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Foreground="{DynamicResource AccentRedBrush}"/>
                                    <TextBlock Text="3D Model Loaded!" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextPrimaryBrush}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding ModelInfoText}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,8,0,16"/>
                                    
                                    <!-- Simple Viewport Controls -->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Content="🔄 Reset View" Command="{Binding ResetViewportCommand}" Style="{DynamicResource SecondaryButtonStyle}" Padding="16,12" FontSize="14" Margin="0,0,8,0"/>
                                        <Button Content="🔍 Fit to View" Command="{Binding FitToViewCommand}" Style="{DynamicResource PrimaryButtonStyle}" Padding="16,12" FontSize="14" Margin="0,0,8,0"/>
                                        <Button Content="▶️ Play" Command="{Binding PlayAnimationCommand}" Style="{DynamicResource SecondaryButtonStyle}" Padding="16,12" FontSize="14" Visibility="{Binding CanPlayAnimation, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                                
                                <!-- Empty State -->
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding HasSelectedModel, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                    <TextBlock Text="🎯" FontSize="64" HorizontalAlignment="Center" Margin="0,0,0,16" Opacity="0.5"/>
                                    <TextBlock Text="3D model will appear here" Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="Select a model from the library" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center" Margin="0,8,0,0"/>
                                </StackPanel>

                                <!-- Loading Progress -->
                                <Border Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8" Padding="24" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel HorizontalAlignment="Center" MinWidth="300">
                                        <TextBlock Text="🎯 Loading model..." Style="{DynamicResource HeadingMediumStyle}" Foreground="{DynamicResource AccentRedBrush}" HorizontalAlignment="Center" Margin="0,0,0,12"/>
                                        <TextBlock Text="{Binding LoadingStatus}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Border>

                                <!-- Action Buttons -->
                                <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal" Margin="16" Visibility="{Binding HasSelectedModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Button Content="⭐" Command="{Binding AddToFavoritesCommand}" Style="{DynamicResource GhostButtonStyle}" ToolTip="Add to Favorites" Margin="0,0,8,0"/>
                                    <Button Content="📤" Command="{Binding ExportModelCommand}" Style="{DynamicResource GhostButtonStyle}" ToolTip="Export Model"/>
                                </StackPanel>
                            </Grid>
                        </Border>

                        <!-- Model Info -->
                        <Border Grid.Row="1" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="6" Padding="12" Margin="0,12,0,0" Visibility="{Binding HasSelectedModel, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <StackPanel>
                                <TextBlock Text="{Binding SelectedModel.Name}" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextPrimaryBrush}" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding SelectedModel.ModelInfo}" Style="{DynamicResource BodyTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                                <TextBlock Text="{Binding SelectedModel.AnimationStatus}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource AccentRedBrush}" HorizontalAlignment="Center" Margin="0,4,0,0"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Datasets View - Novice Mode -->
    <DataTemplate x:Key="NoviceDatasetsViewModelTemplate">
        <Grid Background="{DynamicResource SecondaryDarkBrush}" Margin="12" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Orientation="Horizontal" Margin="12,12,12,8">
                <TextBlock Text="📚" FontSize="24" Margin="0,0,8,0" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <TextBlock Text="Datasets" Style="{DynamicResource HeadingLargeStyle}" Foreground="{DynamicResource TextPrimaryBrush}"/>
                <StackPanel Orientation="Horizontal" Margin="12,0,0,0">
                    <Button Content="Upload" Style="{DynamicResource PrimaryButtonStyle}" Command="{Binding ImportDatasetCommand}" Margin="0,0,8,0"/>
                    <Button Content="New" Style="{DynamicResource SecondaryButtonStyle}" Command="{Binding CreateDatasetCommand}"/>
                </StackPanel>
            </StackPanel>

            <!-- Big upload area -->
            <Border Grid.Row="1" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" Margin="12,0,12,12" Padding="16">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Drag &amp; Drop files here" Style="{DynamicResource HeadingSmallStyle}" Foreground="{DynamicResource TextSecondaryBrush}" HorizontalAlignment="Center"/>
                    <TextBlock Text="or" Foreground="{DynamicResource TextMutedBrush}" HorizontalAlignment="Center" Margin="0,4,0,4"/>
                    <Button Content="Browse..." Style="{DynamicResource SecondaryButtonStyle}" Command="{Binding BrowseDatasetPathCommand}"/>
                </StackPanel>
            </Border>

            <!-- Simple list + preview -->
            <Grid Grid.Row="2" Margin="12,0,12,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <!-- Datasets list -->
                <Border Style="{StaticResource DarkBorderStyle}" Margin="0,0,8,0">
                    <DockPanel>
                        <TextBlock Text="My Datasets" Style="{DynamicResource HeadingSmallStyle}" Margin="0,0,0,8" DockPanel.Dock="Top"/>
                        <ListBox ItemsSource="{Binding Datasets}" SelectedItem="{Binding SelectedDataset}" Background="{DynamicResource TertiaryDarkBrush}" Foreground="{DynamicResource TextPrimaryBrush}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="8,6">
                                        <TextBlock Text="{Binding TypeIcon}" Margin="0,0,8,0"/>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Name}" Style="{DynamicResource BodyTextBoldStyle}"/>
                                            <TextBlock Text="{Binding SizeText}" Style="{DynamicResource CaptionTextStyle}" Foreground="{DynamicResource TextMutedBrush}"/>
                                        </StackPanel>
                                        <TextBlock Text="{Binding StatusText}" Foreground="{DynamicResource TextSecondaryBrush}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Border>

                <!-- Preview -->
                <Border Grid.Column="1" Style="{StaticResource DarkBorderStyle}" Margin="8,0,0,0">
                    <StackPanel>
                        <TextBlock Text="Preview" Style="{DynamicResource HeadingSmallStyle}" Margin="0,0,0,8"/>
                        <TextBlock Text="Name:" Style="{DynamicResource CaptionTextStyle}"/>
                        <TextBlock Text="{Binding SelectedDataset.Name}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,8"/>
                        <TextBlock Text="Description:" Style="{DynamicResource CaptionTextStyle}"/>
                        <TextBlock Text="{Binding SelectedDataset.Description}" TextWrapping="Wrap" Margin="0,0,0,8"/>
                        <TextBlock Text="Status:" Style="{DynamicResource CaptionTextStyle}"/>
                        <TextBlock Text="{Binding SelectedDataset.StatusText}"/>
                        <StackPanel Orientation="Horizontal" Margin="0,12,0,0">
                            <Button Content="Prepare" Style="{DynamicResource PrimaryButtonStyle}" Command="{Binding RefreshDatasetsCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>

    <!-- Compatibility aliases in case runtime type name differs -->
    <DataTemplate x:Key="NoviceDatasetsViewTemplate">
        <ContentPresenter ContentTemplate="{StaticResource NoviceDatasetsViewModelTemplate}"/>
    </DataTemplate>
    <DataTemplate x:Key="NoviceDatasetViewModelTemplate">
        <ContentPresenter ContentTemplate="{StaticResource NoviceDatasetsViewModelTemplate}"/>
    </DataTemplate>

    <!-- Generic keys so selector fallback (viewModelTypeTemplate) resolves -->
    <DataTemplate x:Key="DatasetsViewModelTemplate">
        <ContentPresenter ContentTemplate="{StaticResource NoviceDatasetsViewModelTemplate}"/>
    </DataTemplate>
    <DataTemplate x:Key="DatasetViewModelTemplate">
        <ContentPresenter ContentTemplate="{StaticResource NoviceDatasetsViewModelTemplate}"/>
    </DataTemplate>
    
    
    

    
    <!-- NOVICE LoRACardTemplate - clearer hierarchy and spacing -->
    <DataTemplate x:Key="LoRACardTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}"
                BorderBrush="{DynamicResource BorderBrush}"
                BorderThickness="1"
                CornerRadius="8"
                Padding="14"
                Margin="6">
            <StackPanel>
                <TextBlock Text="{Binding Name}"
                           Style="{DynamicResource HeadingSmallStyle}"
                           TextTrimming="CharacterEllipsis"/>

                <TextBlock Text="{Binding BaseModel}" 
                           Style="{DynamicResource CaptionTextStyle}"
                           Foreground="{DynamicResource TextMutedBrush}"
                           Margin="0,2,0,8"/>

                <TextBlock Text="{Binding Description}"
                           Style="{DynamicResource BodyTextStyle}"
                           Foreground="{DynamicResource TextSecondaryBrush}"
                           TextWrapping="Wrap"
                           MaxHeight="56"
                           Margin="0,0,0,12"/>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"
                            Content="Apply"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ApplyLoRACommand}"
                            CommandParameter="{Binding}"
                            Style="{DynamicResource PrimaryButtonStyle}"/>
                    <TextBlock Grid.Column="1"
                               Text="{Binding FormattedFileSize}"
                               Style="{DynamicResource CaptionTextStyle}"
                               Foreground="{DynamicResource TextMutedBrush}"
                               Margin="12,0,0,0"
                               VerticalAlignment="Center"/>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- NOVICE RUNNER MANAGER: Minimal controls + status -->
    <DataTemplate x:Key="NoviceRunnerManagerViewModelTemplate">
        <Grid Background="{DynamicResource PrimaryDarkBrush}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="520" Margin="24">
                <TextBlock Text="Runner Manager" Style="{StaticResource HeadingLargeStyle}" HorizontalAlignment="Center"/>
                <Border Style="{StaticResource DarkCardStyle}" Margin="0,16,0,16">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse Grid.Column="0" Width="18" Height="18" Margin="0,0,12,0">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="{DynamicResource ErrorBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsHealthy}" Value="True">
                                            <Setter Property="Fill" Value="{DynamicResource SuccessBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <StackPanel Grid.Column="1">
                            <TextBlock Text="{Binding ActiveRunnerName}" Style="{StaticResource HeadingSmallStyle}"/>
                            <TextBlock Text="{Binding ActiveRunnerStatus}" Style="{StaticResource CaptionTextStyle}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <Button Content="Start" Command="{Binding StartRunnerCommand}" Style="{StaticResource PrimaryButtonStyle}" Margin="0,0,8,0"/>
                            <Button Content="Stop" Command="{Binding StopRunnerCommand}" Style="{StaticResource DangerButtonStyle}" Margin="0,0,8,0"/>
                            <Button Content="Restart" Command="{Binding RestartRunnerCommand}" Style="{StaticResource GhostButtonStyle}"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <Border Style="{StaticResource DarkCardStyle}">
                    <StackPanel>
                        <TextBlock Text="Available Runners" Style="{StaticResource HeadingSmallStyle}" Margin="0,0,0,8"/>
                        <ItemsControl ItemsSource="{Binding AvailableRunners}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,0,0,8">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Icon}" FontSize="18" Margin="0,0,8,0"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Name}" Style="{StaticResource BodyTextStyle}"/>
                                        <Button Grid.Column="2" Content="Activate" Command="{Binding DataContext.SwitchRunnerCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" Style="{StaticResource SecondaryButtonStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- ControlNet Card Template (scoped for Novice dictionary) -->
    <DataTemplate x:Key="ControlNetCardTemplate">
        <Border MinWidth="220"
                MaxWidth="260"
                Margin="0,0,12,12"
                Padding="12"
                Style="{StaticResource DarkCardStyle}">
            <StackPanel>
                <TextBlock Text="{Binding Name}"
                           Style="{StaticResource HeadingSmallStyle}"
                           TextTrimming="CharacterEllipsis"/>
                <TextBlock Text="{Binding Description}"
                           Style="{StaticResource BodyTextStyle}"
                           TextWrapping="Wrap"
                           MaxHeight="48"
                           Margin="0,4,0,8"/>
                <Grid Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding FileSize}" Style="{StaticResource CaptionTextStyle}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Version}" Style="{StaticResource CaptionTextStyle}"/>
                </Grid>
                <Button Content="Apply"
                        Command="{Binding DataContext.ApplyControlNetCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
                            <Setter Property="Content" Value="Apply"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                                    <Setter Property="Content" Value="Applied"/>
                                    <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- NOVICE ControlNets ViewModel template -->
    <DataTemplate x:Key="NoviceControlNetsViewModelTemplate">
        <Grid Background="{DynamicResource PrimaryDarkBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Left: simple controls + library -->
            <StackPanel Grid.Column="0" Margin="16">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                    <TextBox Text="{Binding InputImagePath}" Style="{DynamicResource DarkTextBoxStyle}" IsReadOnly="True" Width="260"/>
                    <Button Content="Browse" Command="{Binding SelectInputImageCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="8,0,0,0"/>
                </StackPanel>

                <ScrollViewer>
                    <ItemsControl ItemsSource="{Binding AvailableControlNets}" ItemTemplate="{StaticResource ControlNetCardTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </StackPanel>

            <!-- Right: applied stack -->
            <Border Grid.Column="1" Style="{StaticResource DarkBorderStyle}" Margin="0,16,16,16">
                <ScrollViewer>
                    <ItemsControl ItemsSource="{Binding AppliedControlNets}"/>
                </ScrollViewer>
            </Border>
        </Grid>
    </DataTemplate>
    
    <!-- Required template: GenerationProgressTemplate -->
    <DataTemplate x:Key="GenerationProgressTemplate">
        <StackPanel>
            <TextBlock Text="⏳ Creating..." Style="{DynamicResource BodyTextStyle}"/>
            <ProgressBar Value="50" Height="8"/>
        </StackPanel>
    </DataTemplate>
    
    <!-- Required template: ModelSelectionTemplate -->
    <DataTemplate x:Key="ModelSelectionTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="🧠 Choose Your AI" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"/>
                <ComboBox Style="{DynamicResource DarkComboBoxStyle}" Margin="0,8"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Required template: StatusDisplayTemplate -->
    <DataTemplate x:Key="StatusDisplayTemplate">
        <Border Padding="8" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="4">
            <TextBlock Text="🟢 System Ready" Style="{DynamicResource CaptionTextStyle}"/>
        </Border>
    </DataTemplate>
    
    <!-- Required template: ErrorDisplayTemplate -->
    <DataTemplate x:Key="ErrorDisplayTemplate">
        <Border Padding="12" Background="{DynamicResource ErrorBrush}" CornerRadius="4">
            <TextBlock Text="⚠️ Something went wrong" 
                       Foreground="White" 
                       Style="{DynamicResource BodyTextStyle}"/>
        </Border>
    </DataTemplate>
    
    <!-- Voice Synthesis Templates -->
    <DataTemplate x:Key="TTSConfigurationTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Speak Your Words Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="🎤" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Speak Your Words" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Step 1: What to Say -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="1️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="What would you like me to say?" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <TextBox Text="{Binding TextToSpeak, UpdateSourceTrigger=PropertyChanged}" 
                                 Background="{DynamicResource TertiaryDarkBrush}" 
                                 Foreground="{DynamicResource TextPrimaryBrush}" 
                                 BorderBrush="{DynamicResource BorderBrush}" 
                                 Padding="10" 
                                 MinHeight="80" 
                                 TextWrapping="Wrap" 
                                 AcceptsReturn="True" 
                                 FontSize="13"/>
                    </StackPanel>
                </Border>
                
                <!-- Step 2: Choose Voice -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="2️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Pick a voice that sounds right" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <ComboBox SelectedItem="{Binding SelectedVoice}" 
                                  ItemsSource="{Binding AvailableVoices}" 
                                  Background="{DynamicResource TertiaryDarkBrush}" 
                                  Foreground="{DynamicResource TextPrimaryBrush}" 
                                  BorderBrush="{DynamicResource BorderBrush}" 
                                  Padding="10" 
                                  FontSize="13">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Gender, Converter={StaticResource GenderToIcon}}" Margin="0,0,8,0"/>
                                        <TextBlock Text="{Binding DisplayName}" FontWeight="Medium" Margin="0,0,8,0"/>
                                        <TextBlock Text="{Binding Language}" 
                                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                                   FontSize="12"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </Border>
                
                <!-- Step 3: Make it Sound Right -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                            <TextBlock Text="3️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="How fast should I talk?" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" 
                                       Text="🐌 Slow" 
                                       FontSize="12" 
                                       Foreground="{DynamicResource TextSecondaryBrush}" 
                                       VerticalAlignment="Center" 
                                       Margin="0,0,10,0"/>
                            <Slider Grid.Column="1" 
                                    Value="{Binding SpeechRate}" 
                                    Minimum="0.5" 
                                    Maximum="2.0" 
                                    TickFrequency="0.5" 
                                    IsSnapToTickEnabled="True" 
                                    TickPlacement="BottomRight"/>
                            <TextBlock Grid.Column="2" 
                                       Text="🚀 Fast" 
                                       FontSize="12" 
                                       Foreground="{DynamicResource TextSecondaryBrush}" 
                                       VerticalAlignment="Center" 
                                       Margin="10,0,0,0"/>
                        </Grid>
                    </StackPanel>
                </Border>
                
                <!-- Generate Voice Button -->
                <Button Content="🎵 Create Voice" 
                        Command="{Binding GenerateSpeechCommand}" 
                        Background="{DynamicResource AccentRedBrush}" 
                        Foreground="{DynamicResource TextPrimaryBrush}" 
                        BorderBrush="{DynamicResource AccentRedBrush}" 
                        Padding="15,10" 
                        FontSize="14" 
                        FontWeight="SemiBold" 
                        HorizontalAlignment="Center" 
                        MinWidth="150">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="VoiceCloningTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Clone a Voice Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="🧬" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Clone a Voice" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Step 1: Upload Voice Sample -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="1️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Upload a clear voice recording" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="4" 
                                Padding="20" 
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Text="📁" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                                <TextBlock Text="Drop your audio file here" 
                                           FontSize="13" 
                                           FontWeight="Medium" 
                                           HorizontalAlignment="Center" 
                                           Foreground="{DynamicResource TextPrimaryBrush}" 
                                           Margin="0,0,0,8"/>
                                <TextBlock Text="(WAV, MP3, or FLAC - at least 10 seconds)" 
                                           FontSize="11" 
                                           HorizontalAlignment="Center" 
                                           Foreground="{DynamicResource TextSecondaryBrush}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Step 2: Name Your Voice -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="2️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Give your voice clone a name" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <TextBox Text="{Binding VoiceCloneName, UpdateSourceTrigger=PropertyChanged}" 
                                 Background="{DynamicResource TertiaryDarkBrush}" 
                                 Foreground="{DynamicResource TextPrimaryBrush}" 
                                 BorderBrush="{DynamicResource BorderBrush}" 
                                 Padding="10" 
                                 FontSize="13"/>
                    </StackPanel>
                </Border>
                
                <!-- Step 3: Start Training -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="3️⃣" FontSize="16" Margin="0,0,8,0"/>
                            <TextBlock Text="Train the AI to copy the voice" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        <TextBlock Text="This will take about 5-10 minutes" 
                                   FontSize="12" 
                                   Foreground="{DynamicResource TextSecondaryBrush}" 
                                   Margin="0,0,0,10"/>
                        <Button Content="🚀 Start Voice Training" 
                                Command="{Binding StartVoiceTrainingCommand}" 
                                Background="{DynamicResource AccentRedBrush}" 
                                Foreground="{DynamicResource TextPrimaryBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                Padding="15,10" 
                                FontSize="14" 
                                FontWeight="SemiBold" 
                                HorizontalAlignment="Center" 
                                MinWidth="180">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="RealTimeSynthesisTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Live Voice Chat Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="⚡" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Live Voice Chat" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Voice Chat Interface -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="20" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <!-- Active Voice Display -->
                        <StackPanel Orientation="Horizontal" 
                                   HorizontalAlignment="Center" 
                                   Margin="0,0,0,15">
                            <TextBlock Text="🎙️" FontSize="20" Margin="0,0,10,0"/>
                            <TextBlock Text="{Binding CurrentVoice.DisplayName}" 
                                       FontSize="16" 
                                       FontWeight="SemiBold" 
                                       Foreground="{DynamicResource TextPrimaryBrush}"/>
                        </StackPanel>
                        
                        <!-- Talk Button -->
                        <Button Content="{Binding IsSpeaking, Converter={StaticResource SpeakingToText}}" 
                                Command="{Binding ToggleSpeechCommand}" 
                                Background="{DynamicResource AccentRedBrush}" 
                                Foreground="{DynamicResource TextPrimaryBrush}" 
                                FontSize="18" 
                                FontWeight="Bold" 
                                Padding="30,15" 
                                HorizontalAlignment="Center" 
                                MinWidth="200">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsSpeaking}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        
                        <!-- Quick Text Input -->
                        <StackPanel Margin="0,15,0,0">
                            <TextBlock Text="Or type something to say:" 
                                       FontSize="12" 
                                       Foreground="{DynamicResource TextSecondaryBrush}" 
                                       HorizontalAlignment="Center" 
                                       Margin="0,0,0,8"/>
                            <TextBox Text="{Binding QuickText, UpdateSourceTrigger=PropertyChanged}" 
                                     Background="{DynamicResource TertiaryDarkBrush}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     BorderBrush="{DynamicResource BorderBrush}" 
                                     Padding="10" 
                                     FontSize="13" 
                                     HorizontalAlignment="Center" 
                                     MinWidth="300"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="AudioProcessingTemplate">
        <Border Background="{DynamicResource SecondaryDarkBrush}" 
                CornerRadius="8" 
                Padding="20" 
                Margin="5">
            <StackPanel>
                <!-- Fix Your Audio Header -->
                <StackPanel Orientation="Horizontal" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,10">
                    <TextBlock Text="🔧" FontSize="24" Margin="0,0,8,0"/>
                    <TextBlock Text="Fix Your Audio" 
                               FontSize="22" 
                               FontWeight="Bold" 
                               Foreground="{DynamicResource AccentRedBrush}"/>
                </StackPanel>
                
                <!-- Audio Upload Area -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <TextBlock Text="Upload audio that needs fixing" 
                                   FontSize="14" 
                                   FontWeight="SemiBold" 
                                   Foreground="{DynamicResource TextPrimaryBrush}" 
                                   HorizontalAlignment="Center" 
                                   Margin="0,0,0,10"/>
                        <Border Background="{DynamicResource TertiaryDarkBrush}" 
                                BorderBrush="{DynamicResource BorderBrush}" 
                                BorderThickness="2" 
                                CornerRadius="4" 
                                Padding="20" 
                                AllowDrop="True">
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Text="🎵" FontSize="32" HorizontalAlignment="Center" Margin="0,0,0,8"/>
                                <TextBlock Text="Drop your noisy audio here" 
                                           FontSize="13" 
                                           FontWeight="Medium" 
                                           HorizontalAlignment="Center" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
                
                <!-- Quick Fix Options -->
                <Border Background="{DynamicResource PrimaryDarkBrush}" 
                        CornerRadius="6" 
                        Padding="15" 
                        Margin="0,0,0,15">
                    <StackPanel>
                        <TextBlock Text="Choose what to fix:" 
                                   FontSize="14" 
                                   FontWeight="SemiBold" 
                                   Foreground="{DynamicResource TextPrimaryBrush}" 
                                   Margin="0,0,0,12"/>
                        
                        <StackPanel>
                            <CheckBox Content="🔇 Remove background noise" 
                                     IsChecked="{Binding ReduceNoise}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     FontSize="13" 
                                     Margin="0,0,0,8"/>
                            <CheckBox Content="📢 Make it louder" 
                                     IsChecked="{Binding NormalizeVolume}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     FontSize="13" 
                                     Margin="0,0,0,8"/>
                            <CheckBox Content="✨ Enhance voice clarity" 
                                     IsChecked="{Binding EnhanceVoice}" 
                                     Foreground="{DynamicResource TextPrimaryBrush}" 
                                     FontSize="13" 
                                     Margin="0,0,0,8"/>
                        </StackPanel>
                        
                        <Button Content="🎯 Fix My Audio" 
                                Command="{Binding ProcessAudioCommand}" 
                                Background="{DynamicResource AccentRedBrush}" 
                                Foreground="{DynamicResource TextPrimaryBrush}" 
                                BorderBrush="{DynamicResource AccentRedBrush}" 
                                Padding="15,10" 
                                Margin="0,12,0,0" 
                                FontSize="14" 
                                FontWeight="SemiBold" 
                                HorizontalAlignment="Center" 
                                MinWidth="150">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentRedHoverBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Image generation templates for Views we wired -->
    
    <!-- ImagesTemplate - Parent template with subtab navigation -->
    <DataTemplate x:Key="ImagesTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Subtab Navigation -->
            <Border Grid.Row="0" Background="{DynamicResource SecondaryDarkBrush}" 
                    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1"
                    Padding="16,12">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="🎨 Text to Image" 
                            Command="{Binding DataContext.NavigateToText2ImageCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🖼️ Image to Image" 
                            Command="{Binding DataContext.NavigateToImage2ImageCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🎭 Inpainting" 
                            Command="{Binding DataContext.NavigateToInpaintingCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="📐 Upscaling" 
                            Command="{Binding DataContext.NavigateToUpscalingCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"/>
                </StackPanel>
            </Border>
            
            <!-- Current Subtab Content -->
            <Border Grid.Row="1" Background="{DynamicResource PrimaryDarkBrush}" Padding="0">
                <ContentControl Content="{Binding DataContext.CurrentViewModel, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Border>
        </Grid>
    </DataTemplate>
    
    <!-- Text2ImageTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Text2ImageTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <Grid>
                <!-- Main Content (visible when capabilities are available) -->
                <StackPanel Visibility="{Binding HasImageGenerationCapability, Converter={StaticResource BoolToVisibility}}">
                <!-- Friendly Header -->
                <TextBlock Text="🎨 Create Images from Words" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Prompt Input -->
                <TextBlock Text="Describe what you want to see:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="60" 
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,16"/>
                
                <!-- Style Presets - Visual Tiles for Cognitive Load Reduction -->
                <TextBlock Text="Choose a style:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,8"/>
                <Grid Margin="0,0,0,16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Photo Style -->
                    <Button Grid.Column="0" Command="{Binding ApplyStylePresetCommand}" CommandParameter="photo"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0">
                        <StackPanel>
                            <TextBlock Text="📸" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Photo" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- Art Style -->
                    <Button Grid.Column="1" Command="{Binding ApplyStylePresetCommand}" CommandParameter="art"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="2,0,2,0">
                        <StackPanel>
                            <TextBlock Text="🎨" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Artistic" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- Cartoon Style -->
                    <Button Grid.Column="2" Command="{Binding ApplyStylePresetCommand}" CommandParameter="cartoon"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="2,0,2,0">
                        <StackPanel>
                            <TextBlock Text="🎭" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Cartoon" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                    
                    <!-- Concept Style -->
                    <Button Grid.Column="3" Command="{Binding ApplyStylePresetCommand}" CommandParameter="concept"
                            Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0">
                        <StackPanel>
                            <TextBlock Text="💡" FontSize="20" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                            <TextBlock Text="Concept" FontSize="11" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </Grid>
                
                <!-- Generate Button -->
                <Button Content="✨ Generate Image" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🖼️ Your generated image will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Button -->
                <Button Content="💾 Save Image" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
                
                </StackPanel>
                
                <!-- Capability Error State (visible when capabilities are missing) -->
                <Border Background="{DynamicResource ErrorBrush}" Padding="10" Margin="5" CornerRadius="4"
                        Visibility="{Binding HasImageGenerationCapability, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}">
                    <TextBlock Text="{Binding ImageGenerationError}" Foreground="{DynamicResource TextPrimaryBrush}" TextWrapping="Wrap"/>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- Image2ImageTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Image2ImageTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🖼️ Transform Your Images" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Image -->
                <Button Content="📁 Load Image" 
                        Command="{Binding LoadImageCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Prompt Input -->
                <TextBlock Text="How do you want to change it:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="40" 
                         TextWrapping="Wrap"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Transform Button -->
                <Button Content="✨ Transform Image" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,8">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🔄 Transformed image will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Button -->
                <Button Content="💾 Save Result" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- ENHANCED NOVICE InpaintingTemplate - Visual Metaphors + Simple Workflow -->
    <DataTemplate x:Key="InpaintingTemplate">
        <Border Padding="20" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="12">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Friendly Header with Visual Metaphor -->
                <StackPanel Grid.Row="0" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <TextBlock Text="🎨✨" 
                               FontSize="32" 
                               HorizontalAlignment="Center"
                               Margin="0,0,0,8"/>
                    <TextBlock Text="Magic Image Fixer" 
                               Style="{DynamicResource HeadingLargeStyle}"
                               HorizontalAlignment="Center"
                               Margin="0,0,0,4"/>
                    <TextBlock Text="Paint over what you want to change, then describe what it should become" 
                               Style="{DynamicResource CaptionTextStyle}"
                               Foreground="{DynamicResource TextMutedBrush}"
                               TextAlignment="Center"
                               TextWrapping="Wrap"
                               MaxWidth="300"/>
                </StackPanel>
                
                <!-- Simple Step-by-Step Workflow -->
                <StackPanel Grid.Row="1" Margin="0,0,0,16">
                    <!-- Step 1: Load Image -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            Padding="16,12" 
                            CornerRadius="8"
                            Margin="0,0,0,8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    Background="{DynamicResource AccentRedBrush}"
                                    Width="30" Height="30"
                                    CornerRadius="15"
                                    Margin="0,0,12,0">
                                <TextBlock Text="1" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"
                                           FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Border>
                            
                            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock Text="Choose Your Image" 
                                           Style="{DynamicResource BodyTextStyle}"
                                           FontWeight="SemiBold"/>
                                <TextBlock Text="Pick the photo you want to fix" 
                                           Style="{DynamicResource CaptionTextStyle}"
                                           Foreground="{DynamicResource TextMutedBrush}"/>
                            </StackPanel>
                            
                            <Button Grid.Column="2"
                                    Content="📁 Browse" 
                                    Command="{Binding LoadImageCommand}"
                                    Style="{DynamicResource SecondaryButtonStyle}"
                                    Padding="12,6"/>
                        </Grid>
                    </Border>
                    
                    <!-- Step 2: Paint Area -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            Padding="16,12" 
                            CornerRadius="8"
                            Margin="0,0,0,8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    Background="{DynamicResource AccentRedBrush}"
                                    Width="30" Height="30"
                                    CornerRadius="15"
                                    Margin="0,0,12,0">
                                <TextBlock Text="2" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"
                                           FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Border>
                            
                            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock Text="Paint the Area" 
                                           Style="{DynamicResource BodyTextStyle}"
                                           FontWeight="SemiBold"/>
                                <TextBlock Text="Use your mouse to paint over what you want to change" 
                                           Style="{DynamicResource CaptionTextStyle}"
                                           Foreground="{DynamicResource TextMutedBrush}"/>
                            </StackPanel>
                            
                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                <Button Content="🖌️" 
                                        Style="{DynamicResource GhostButtonStyle}"
                                        Padding="8"
                                        ToolTip="Paint brush"
                                        Margin="0,0,4,0"/>
                                <Button Content="🧽" 
                                        Style="{DynamicResource GhostButtonStyle}"
                                        Padding="8"
                                        ToolTip="Eraser"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    
                    <!-- Step 3: Describe Change -->
                    <Border Background="{DynamicResource TertiaryDarkBrush}" 
                            Padding="16,12" 
                            CornerRadius="8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    Background="{DynamicResource AccentRedBrush}"
                                    Width="30" Height="30"
                                    CornerRadius="15"
                                    Margin="0,0,12,0">
                                <TextBlock Text="3" 
                                           Foreground="{DynamicResource TextPrimaryBrush}"
                                           FontWeight="Bold"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Border>
                            
                            <StackPanel Grid.Column="1">
                                <TextBlock Text="Describe What You Want" 
                                           Style="{DynamicResource BodyTextStyle}"
                                           FontWeight="SemiBold"
                                           Margin="0,0,0,6"/>
                                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                                         Style="{DynamicResource DarkTextBoxStyle}"
                                         MinHeight="45" 
                                         TextWrapping="Wrap"
                                         Tag="Example: a beautiful garden, a red car, blue sky..."/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </StackPanel>
                
                <!-- Magic Button -->
                <Button Grid.Row="2"
                        Content="✨ Work Your Magic ✨" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="24,10"
                        FontSize="14"
                        FontWeight="SemiBold"
                        Margin="0,0,0,16"/>
                
                <!-- Results Area -->
                <Border Grid.Row="3"
                        Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="8" 
                        Padding="16"
                        MinHeight="200">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <StackPanel HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}">
                            <TextBlock Text="🎭" 
                                       FontSize="48" 
                                       HorizontalAlignment="Center"
                                       Margin="0,0,0,8"
                                       Opacity="0.5"/>
                            <TextBlock Text="Your magical transformation will appear here" 
                                       Style="{DynamicResource CaptionTextStyle}"
                                       HorizontalAlignment="Center"
                                       Foreground="{DynamicResource TextMutedBrush}"
                                       FontStyle="Italic"/>
                        </StackPanel>
                    </Grid>
                </Border>
                
                <!-- Simple Save Action -->
                <Button Grid.Row="4"
                        Content="💾 Save My Creation" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Padding="16,8"
                        Margin="0,12,0,0"/>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- UpscalingTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="UpscalingTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🔍 Make Images Bigger &amp; Better" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Image -->
                <Button Content="📁 Load Image to Enhance" 
                        Command="{Binding LoadImageCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Scale Factor -->
                <TextBlock Text="Make it how much bigger:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="2x Bigger" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="4x Bigger" Margin="0,0,16,0"/>
                    <RadioButton Content="8x Bigger"/>
                </StackPanel>
                
                <!-- Upscale Button -->
                <Button Content="✨ Enhance Image" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,8">
                    <Grid>
                        <Image Source="{Binding GeneratedImageSource}" 
                               Stretch="Uniform"
                               Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="📈 Enhanced image will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Button -->
                <Button Content="💾 Save Enhanced Image" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedImage, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- Video generation templates -->
    
    <!-- Text2VideoTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Text2VideoTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎬 Create Videos from Text" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Prompt Input -->
                <TextBlock Text="Describe the video you want to see:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="60" 
                         TextWrapping="Wrap"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Video Length -->
                <TextBlock Text="How long should it be:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="5 seconds" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="10 seconds" Margin="0,0,16,0"/>
                    <RadioButton Content="20 seconds"/>
                </StackPanel>
                
                <!-- Generate Button -->
                <Button Content="🎬 Generate Video" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <MediaElement Source="{Binding GeneratedVideoSource}" 
                                      LoadedBehavior="Manual"
                                      Stretch="Uniform"
                                      Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🎥 Generated video will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                           Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                           Margin="0,8,0,8">
                    <Button Content="▶️ Play" Command="{Binding PlayCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏸️ Pause" Command="{Binding PauseCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏹️ Stop" Command="{Binding StopCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Save Button -->
                <Button Content="💾 Save Video" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Video2VideoTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="Video2VideoTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎨 Transform Your Videos" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Video -->
                <Button Content="📁 Load Video to Transform" 
                        Command="{Binding LoadVideoCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Transformation Prompt -->
                <TextBlock Text="How should the video be changed:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding Prompt, UpdateSourceTrigger=PropertyChanged}" 
                         MinHeight="40" 
                         TextWrapping="Wrap"
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Strength Control -->
                <TextBlock Text="How much change:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Slight Change" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Medium Change" Margin="0,0,16,0"/>
                    <RadioButton Content="Major Change"/>
                </StackPanel>
                
                <!-- Transform Button -->
                <Button Content="✨ Transform Video" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <MediaElement Source="{Binding GeneratedVideoSource}" 
                                      LoadedBehavior="Manual"
                                      Stretch="Uniform"
                                      Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="🔄 Transformed video will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                           Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                           Margin="0,8,0,8">
                    <Button Content="▶️ Play" Command="{Binding PlayCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏸️ Pause" Command="{Binding PauseCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏹️ Stop" Command="{Binding StopCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Save Button -->
                <Button Content="💾 Save Result" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- MotionControlTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="MotionControlTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎥 Control Camera Movement" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Camera Movement Type -->
                <TextBlock Text="Choose camera movement:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="🔄 Pan Left to Right" IsChecked="True" Margin="0,4"/>
                    <RadioButton Content="⬆️⬇️ Tilt Up and Down" Margin="0,4"/>
                    <RadioButton Content="🔍 Zoom In" Margin="0,4"/>
                    <RadioButton Content="🔎 Zoom Out" Margin="0,4"/>
                    <RadioButton Content="🌀 Orbit Around" Margin="0,4"/>
                </StackPanel>
                
                <!-- Speed Control -->
                <TextBlock Text="Movement speed:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Slow" Margin="0,0,16,0"/>
                    <RadioButton Content="Medium" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Fast"/>
                </StackPanel>
                
                <!-- Apply Motion Button -->
                <Button Content="🎬 Apply Camera Motion" 
                        Command="{Binding ApplyMotionCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Motion Preview -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,8">
                    <Grid>
                        <Canvas Background="Transparent" ClipToBounds="True"
                               Visibility="{Binding HasMotionPath, Converter={StaticResource BoolToVisibility}}">
                            <!-- Motion path visualization would go here -->
                            <Path Stroke="{DynamicResource AccentRedBrush}" StrokeThickness="2"
                                  Data="{Binding MotionPathGeometry}"/>
                        </Canvas>
                        <TextBlock Text="🎬 Camera motion preview will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasMotionPath, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Save Motion Button -->
                <Button Content="💾 Save Motion Path" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasMotionPath, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- TemporalEffectsTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="TemporalEffectsTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="⏰ Add Time Effects" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Video -->
                <Button Content="📁 Load Video for Effects" 
                        Command="{Binding LoadVideoCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Effect Type Selection -->
                <TextBlock Text="Choose time effect:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="🐌 Slow Motion (0.5x)" IsChecked="True" Margin="0,4"/>
                    <RadioButton Content="🐇 Super Slow Motion (0.25x)" Margin="0,4"/>
                    <RadioButton Content="⏩ Speed Up (2x)" Margin="0,4"/>
                    <RadioButton Content="🏃 Fast Forward (4x)" Margin="0,4"/>
                    <RadioButton Content="🔄 Reverse Time" Margin="0,4"/>
                </StackPanel>
                
                <!-- Smoothness Control -->
                <TextBlock Text="Effect smoothness:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Natural" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Smooth" Margin="0,0,16,0"/>
                    <RadioButton Content="Ultra Smooth"/>
                </StackPanel>
                
                <!-- Apply Effects Button -->
                <Button Content="✨ Apply Time Effect" 
                        Command="{Binding GenerateCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,16"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="200"
                        Margin="0,0,0,8">
                    <Grid>
                        <MediaElement Source="{Binding GeneratedVideoSource}" 
                                      LoadedBehavior="Manual"
                                      Stretch="Uniform"
                                      Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"/>
                        <TextBlock Text="⏰ Time-altered video will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Playback Controls -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                           Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                           Margin="0,8,0,8">
                    <Button Content="▶️ Play" Command="{Binding PlayCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏸️ Pause" Command="{Binding PauseCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="⏹️ Stop" Command="{Binding StopCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Save Button -->
                <Button Content="💾 Save Time-Altered Video" 
                        Command="{Binding SaveCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasGeneratedVideo, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- 3D Models templates -->
    
    <!-- ThreeDModelsTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ThreeDModelsTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <Grid>
                <!-- Main Content (visible when 3D rendering is available) -->
                <StackPanel Visibility="{Binding Has3DRenderingCapability, Converter={StaticResource BoolToVisibility}}">
                <!-- Friendly Header -->
                <TextBlock Text="🎭 3D Model Workshop" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Load Model -->
                <Button Content="📁 Load 3D Model" 
                        Command="{Binding LoadModelCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Quick Actions -->
                <TextBlock Text="Quick actions:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <Button Content="🔄 Rotate" Command="{Binding RotateCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="🔍 Zoom In" Command="{Binding ZoomInCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="🔎 Zoom Out" Command="{Binding ZoomOutCommand}" Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- 3D Viewport Preview -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="250"
                        Margin="0,0,0,8">
                    <Grid>
                        <Viewport3D ClipToBounds="True"
                                   Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}}">
                            <!-- 3D content would go here -->
                            <Viewport3D.Camera>
                                <PerspectiveCamera Position="{Binding CameraPosition}" 
                                                   LookDirection="{Binding CameraLookDirection}"
                                                   UpDirection="0,1,0"/>
                            </Viewport3D.Camera>
                            <!-- ModelVisual3D would be bound here -->
                        </Viewport3D>
                        <TextBlock Text="🎭 3D model will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Model Info -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="8"
                        Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,0,0,8">
                    <StackPanel>
                        <TextBlock Text="{Binding ModelName}" Style="{DynamicResource BodyTextStyle}" HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding VertexCount, StringFormat={}{0} vertices}" Style="{DynamicResource CaptionTextStyle}" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
                
                <!-- Save Screenshot Button -->
                <Button Content="📷 Save Screenshot" 
                        Command="{Binding SaveScreenshotCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasModel, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
                </StackPanel>
                
                <!-- Capability Error State (visible when 3D rendering is not available) -->
                <Border Background="{DynamicResource ErrorBrush}" Padding="10" Margin="5" CornerRadius="4"
                        Visibility="{Binding Has3DRenderingCapability, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}">
                    <TextBlock Text="{Binding ThreeDRenderingError}" Foreground="{DynamicResource TextPrimaryBrush}" TextWrapping="Wrap"/>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
    
    <!-- ModelPropertiesPanelTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ModelPropertiesPanelTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="⚙️ Model Properties" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <!-- Basic Properties -->
                <Grid Margin="0,0,0,8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Name:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,8,4"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedModelName}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,4"/>
                    
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Size:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,8,4"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ModelSize}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,4"/>
                    
                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Type:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,8,4"/>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ModelType}" Style="{DynamicResource BodyTextStyle}" Margin="0,0,0,4"/>
                </Grid>
                
                <!-- Transform Controls -->
                <TextBlock Text="Transform:" Style="{DynamicResource CaptionTextStyle}" Margin="0,8,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <Button Content="Reset" Command="{Binding ResetTransformCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0"/>
                    <Button Content="Center" Command="{Binding CenterModelCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0"/>
                </StackPanel>
                
                <!-- Visibility Toggle -->
                <CheckBox Content="Show Model" 
                          IsChecked="{Binding IsModelVisible}" 
                          HorizontalAlignment="Center"
                          Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- ModelTreeViewTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ModelTreeViewTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="🌳 Model Browser" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <!-- Search Box -->
                <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource DarkTextBoxStyle}"
                         ToolTip="Search models..."
                         Margin="0,0,0,8"/>
                
                <!-- Model List -->
                <ListBox ItemsSource="{Binding ModelFiles}" 
                         SelectedItem="{Binding SelectedModelFile}"
                         Style="{DynamicResource DarkListBoxStyle}"
                         MinHeight="200"
                         Margin="0,0,0,8">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="📎" Margin="0,0,4,0"/>
                                <TextBlock Text="{Binding Name}" 
                                          Style="{DynamicResource BodyTextStyle}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                
                <!-- Load Selected Button -->
                <Button Content="📁 Load Selected" 
                        Command="{Binding LoadSelectedModelCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        IsEnabled="{Binding HasSelectedModel}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- ViewportControlTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="ViewportControlTemplate">
        <Border Padding="12" Background="{DynamicResource TertiaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <TextBlock Text="👁️ 3D Viewer" 
                           Style="{DynamicResource HeadingSmallStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <!-- View Controls -->
                <TextBlock Text="View mode:" Style="{DynamicResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <RadioButton Content="Solid" IsChecked="True" Margin="0,0,8,0"/>
                    <RadioButton Content="Wireframe" Margin="8,0,8,0"/>
                    <RadioButton Content="Points" Margin="8,0,0,0"/>
                </StackPanel>
                
                <!-- Camera Controls -->
                <TextBlock Text="Camera:" Style="{DynamicResource CaptionTextStyle}" HorizontalAlignment="Center" Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <Button Content="Front" Command="{Binding SetFrontViewCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0"/>
                    <Button Content="Side" Command="{Binding SetSideViewCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,4,0"/>
                    <Button Content="Top" Command="{Binding SetTopViewCommand}" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0"/>
                </StackPanel>
                
                <!-- Reset Button -->
                <Button Content="🔄 Reset View" 
                        Command="{Binding ResetViewCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,8,0,0"/>
                
                <!-- Grid Toggle -->
                <CheckBox Content="Show Grid" 
                          IsChecked="{Binding ShowGrid}" 
                          HorizontalAlignment="Center"
                          Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- Video templates -->
    
    <!-- VideoTemplate - Parent template with subtab navigation -->
    <DataTemplate x:Key="VideoTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!-- Subtab Navigation -->
            <Border Grid.Row="0" Background="{DynamicResource SecondaryDarkBrush}" 
                    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1"
                    Padding="16,12">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="🎬 Text to Video" 
                            Command="{Binding DataContext.NavigateToText2VideoCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🎞️ Video to Video" 
                            Command="{Binding DataContext.NavigateToVideo2VideoCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="🎯 Motion Control" 
                            Command="{Binding DataContext.NavigateToMotionControlCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"
                            Margin="0,0,8,0"/>
                    <Button Content="⏱️ Temporal Effects" 
                            Command="{Binding DataContext.NavigateToTemporalEffectsCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            Style="{StaticResource SubTabButtonStyle}"/>
                </StackPanel>
            </Border>
            
            <!-- Current Subtab Content -->
            <Border Grid.Row="1" Background="{DynamicResource PrimaryDarkBrush}" Padding="0">
                <ContentControl Content="{Binding DataContext.CurrentViewModel, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Voice templates -->
    
    <!-- VoiceTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="VoiceTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🎤 Voice Creation Studio" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Quick Start Options -->
                <TextBlock Text="What would you like to do?" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Action Buttons -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <Button Content="🗣️ Text to Speech" 
                            Command="{Binding OpenTTSCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="👤 Clone a Voice" 
                            Command="{Binding OpenVoiceCloningCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="⚡ Live Voice Synthesis" 
                            Command="{Binding OpenRealTimeCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="🎧 Audio Enhancement" 
                            Command="{Binding OpenAudioProcessingCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"/>
                </StackPanel>
                
                <!-- Status Display -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12"
                        Margin="0,16,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" 
                                   Text="Voice Engine Status:" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,4"/>
                        <TextBlock Grid.Row="1" 
                                   Text="{Binding VoiceEngineStatus}" 
                                   Style="{DynamicResource BodyTextStyle}"
                                   HorizontalAlignment="Center"/>
                    </Grid>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    
    

    <!-- Entities templates -->
    
    <!-- EntitiesTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="EntitiesTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🤖 Digital Entity Workshop" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Quick Start Options -->
                <TextBlock Text="What would you like to do?" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Action Buttons -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <Button Content="✨ Create New Entity" 
                            Command="{Binding CreateEntityCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="🧠 Design Personality" 
                            Command="{Binding OpenBehavioralPatternsCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="💬 Test Interactions" 
                            Command="{Binding OpenInteractionTestingCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"
                            Margin="0,0,0,8"/>
                    <Button Content="📋 Manage Entities" 
                            Command="{Binding OpenEntityManagementCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            Padding="20,12"/>
                </StackPanel>
                
                <!-- Active Entities Display -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12"
                        Margin="0,16,0,0">
                    <StackPanel>
                        <TextBlock Text="Active Entities:" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,8"/>
                        <ListBox ItemsSource="{Binding ActiveEntities}" 
                                 SelectedItem="{Binding SelectedEntity}"
                                 Style="{DynamicResource DarkListBoxStyle}"
                                 MinHeight="100">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="🤖" Margin="0,0,4,0"/>
                                        <TextBlock Text="{Binding Name}" 
                                                  Style="{DynamicResource BodyTextStyle}"/>
                                        <TextBlock Text="{Binding Status}" 
                                                  Style="{DynamicResource CaptionTextStyle}"
                                                  Margin="8,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- EntityCreationTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="EntityCreationTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="✨ Create New Entity" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Entity Name -->
                <TextBlock Text="Give your entity a name:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <TextBox Text="{Binding EntityName, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource DarkTextBoxStyle}"
                         Margin="0,0,0,12"/>
                
                <!-- Entity Type -->
                <TextBlock Text="What type of entity:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding EntityTypes}" 
                          SelectedItem="{Binding SelectedEntityType}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource DarkComboBoxStyle}"
                          Margin="0,0,0,12"/>
                
                <!-- Basic Personality -->
                <TextBlock Text="Basic personality:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="✓ Friendly &amp; Helpful" IsChecked="True" Margin="0,4"/>
                    <RadioButton Content="⚡ Professional &amp; Formal" Margin="0,4"/>
                    <RadioButton Content="🎨 Creative &amp; Artistic" Margin="0,4"/>
                    <RadioButton Content="📚 Academic &amp; Scholarly" Margin="0,4"/>
                    <RadioButton Content="★ Casual &amp; Fun" Margin="0,4"/>
                </StackPanel>
                
                <!-- Load 3D Avatar -->
                <Button Content="🎭 Load 3D Avatar" 
                        Command="{Binding LoadAvatarCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Margin="0,0,0,12"/>
                
                <!-- Avatar Preview -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="150"
                        Margin="0,0,0,12">
                    <Grid>
                        <Viewport3D ClipToBounds="True"
                                   Visibility="{Binding HasAvatar, Converter={StaticResource BoolToVisibility}}">
                            <Viewport3D.Camera>
                                <PerspectiveCamera Position="{Binding AvatarCameraPosition}" 
                                                   LookDirection="{Binding AvatarLookDirection}"/>
                            </Viewport3D.Camera>
                            <!-- Avatar ModelVisual3D would be bound here -->
                        </Viewport3D>
                        <TextBlock Text="🎭 3D avatar preview will appear here" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Visibility="{Binding HasAvatar, Converter={StaticResource BoolToVisibility}, ConverterParameter=Inverted}"/>
                    </Grid>
                </Border>
                
                <!-- Create Entity Button -->
                <Button Content="🎆 Create Entity" 
                        Command="{Binding CreateEntityCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,8"/>
                
                <!-- Success Message -->
                <Border Background="{DynamicResource SuccessBrush}" 
                        CornerRadius="4" 
                        Padding="8"
                        Visibility="{Binding EntityCreated, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0">
                    <TextBlock Text="✓ Entity created successfully!" 
                               Foreground="White"
                               HorizontalAlignment="Center"/>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- BehavioralPatternsTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="BehavioralPatternsTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="🧠 Personality Programming" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Select Entity -->
                <TextBlock Text="Choose entity to modify:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding AvailableEntities}" 
                          SelectedItem="{Binding SelectedEntity}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource DarkComboBoxStyle}"
                          Margin="0,0,0,12"/>
                
                <!-- Personality Traits -->
                <TextBlock Text="Personality traits (check what applies):" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,8"/>
                
                <ScrollViewer MaxHeight="200" VerticalScrollBarVisibility="Auto" Margin="0,0,0,12">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                        <!-- Positive Traits -->
                        <TextBlock Text="Positive Traits:" Style="{DynamicResource CaptionTextStyle}" Margin="0,0,0,4"/>
                        <CheckBox Content="Helpful &amp; Supportive" Margin="0,2"/>
                        <CheckBox Content="Patient &amp; Understanding" Margin="0,2"/>
                        <CheckBox Content="Creative &amp; Imaginative" Margin="0,2"/>
                        <CheckBox Content="Curious &amp; Inquisitive" Margin="0,2"/>
                        <CheckBox Content="Humorous &amp; Playful" Margin="0,2"/>
                        
                        <!-- Communication Style -->
                        <TextBlock Text="Communication Style:" Style="{DynamicResource CaptionTextStyle}" Margin="0,8,0,4"/>
                        <CheckBox Content="Uses emojis and expressions" Margin="0,2"/>
                        <CheckBox Content="Speaks formally" Margin="0,2"/>
                        <CheckBox Content="Uses casual language" Margin="0,2"/>
                        <CheckBox Content="Asks follow-up questions" Margin="0,2"/>
                    </StackPanel>
                </ScrollViewer>
                
                <!-- Behavior Intensity -->
                <TextBlock Text="Personality intensity:" 
                           Style="{DynamicResource BodyTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <RadioButton Content="Subtle" Margin="0,0,16,0"/>
                    <RadioButton Content="Moderate" IsChecked="True" Margin="0,0,16,0"/>
                    <RadioButton Content="Strong"/>
                </StackPanel>
                
                <!-- Apply Changes Button -->
                <Button Content="✨ Apply Personality" 
                        Command="{Binding ApplyBehaviorCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Padding="16,8"
                        Margin="0,0,0,8"/>
                
                <!-- Preview Area -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12"
                        MinHeight="80"
                        Margin="0,8,0,0">
                    <StackPanel>
                        <TextBlock Text="Personality Preview:" 
                                   Style="{DynamicResource CaptionTextStyle}"
                                   HorizontalAlignment="Center"
                                   Margin="0,0,0,4"/>
                        <TextBlock Text="{Binding PersonalityPreview}" 
                                   Style="{DynamicResource BodyTextStyle}"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- InteractionTestingTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="InteractionTestingTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="💬 Entity Testing Ground" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Select Entity to Test -->
                <TextBlock Text="Choose entity to chat with:" 
                           Style="{DynamicResource BodyTextStyle}"
                           Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding AvailableEntities}" 
                          SelectedItem="{Binding SelectedEntity}"
                          DisplayMemberPath="Name"
                          Style="{DynamicResource DarkComboBoxStyle}"
                          Margin="0,0,0,12"/>
                
                <!-- Start Conversation Button -->
                <Button Content="🚀 Start Conversation" 
                        Command="{Binding StartConversationCommand}"
                        Style="{DynamicResource PrimaryButtonStyle}"
                        HorizontalAlignment="Center"
                        IsEnabled="{Binding HasSelectedEntity}"
                        Margin="0,0,0,12"/>
                
                <!-- Chat History -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="300"
                        Margin="0,0,0,8">
                    <ScrollViewer x:Name="ChatScrollViewer" 
                                 VerticalScrollBarVisibility="Auto"
                                 Padding="8">
                        <ItemsControl ItemsSource="{Binding ChatHistory}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                            CornerRadius="8" 
                                            Padding="8" 
                                            Margin="0,0,0,4">
                                        <StackPanel>
                                            <TextBlock Text="{Binding Sender}" 
                                                      Style="{DynamicResource CaptionTextStyle}"
                                                      FontWeight="Bold"/>
                                            <TextBlock Text="{Binding Message}" 
                                                      Style="{DynamicResource BodyTextStyle}"
                                                      TextWrapping="Wrap"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
                
                <!-- Message Input -->
                <Grid Margin="0,8,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBox Grid.Column="0"
                             Text="{Binding UserMessage, UpdateSourceTrigger=PropertyChanged}" 
                             Style="{DynamicResource DarkTextBoxStyle}"
                             MinHeight="40"
                             TextWrapping="Wrap"
                             Margin="0,0,8,0"/>
                    <Button Grid.Column="1"
                            Content="Send" 
                            Command="{Binding SendMessageCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}"
                            IsEnabled="{Binding CanSendMessage}"/>
                </Grid>
                
                <!-- Quick Test Prompts -->
                <TextBlock Text="Quick test prompts:" 
                           Style="{DynamicResource CaptionTextStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,8,0,4"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,8">
                    <Button Content="Hello!" Command="{Binding SendQuickMessageCommand}" CommandParameter="Hello!" Style="{DynamicResource SecondaryButtonStyle}" Margin="0,0,4,0"/>
                    <Button Content="Tell me a joke" Command="{Binding SendQuickMessageCommand}" CommandParameter="Tell me a joke" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,4,0"/>
                    <Button Content="What can you do?" Command="{Binding SendQuickMessageCommand}" CommandParameter="What can you do?" Style="{DynamicResource SecondaryButtonStyle}" Margin="4,0,0,0"/>
                </StackPanel>
                
                <!-- Clear Chat Button -->
                <Button Content="🗑️ Clear Chat" 
                        Command="{Binding ClearChatCommand}"
                        Style="{DynamicResource SecondaryButtonStyle}"
                        HorizontalAlignment="Center"
                        Visibility="{Binding HasChatHistory, Converter={StaticResource BoolToVisibility}}"
                        Margin="0,8,0,0"/>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- EntityManagementTemplate - FUNCTIONAL NOVICE MODE -->
    <DataTemplate x:Key="EntityManagementTemplate">
        <Border Padding="16" Background="{DynamicResource SecondaryDarkBrush}" CornerRadius="8">
            <StackPanel>
                <!-- Friendly Header -->
                <TextBlock Text="📋 Entity Library" 
                           Style="{DynamicResource HeadingLargeStyle}"
                           HorizontalAlignment="Center"
                           Margin="0,0,0,12"/>
                
                <!-- Search Entities -->
                <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{DynamicResource DarkTextBoxStyle}"
                         ToolTip="Search entities..."
                         Margin="0,0,0,12"/>
                
                <!-- Entity List -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        MinHeight="250"
                        Margin="0,0,0,12">
                    <ListBox ItemsSource="{Binding Entities}" 
                             SelectedItem="{Binding SelectedEntity}"
                             Style="{DynamicResource DarkListBoxStyle}"
                             Padding="8">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                        CornerRadius="4" 
                                        Padding="8" 
                                        Margin="0,0,0,4">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <TextBlock Grid.Column="0" 
                                                  Text="🤖" 
                                                  FontSize="20" 
                                                  VerticalAlignment="Center"
                                                  Margin="0,0,8,0"/>
                                        
                                        <StackPanel Grid.Column="1">
                                            <TextBlock Text="{Binding Name}" 
                                                      Style="{DynamicResource BodyTextStyle}"
                                                      FontWeight="Bold"/>
                                            <TextBlock Text="{Binding EntityType}" 
                                                      Style="{DynamicResource CaptionTextStyle}"/>
                                            <TextBlock Text="{Binding CreatedDate, StringFormat={}Created: {0:MM/dd/yyyy}}" 
                                                      Style="{DynamicResource CaptionTextStyle}"/>
                                        </StackPanel>
                                        
                                        <StackPanel Grid.Column="2" 
                                                   Orientation="Horizontal">
                                            <Button Content="Edit" 
                                                    Command="{Binding DataContext.EditEntityCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                    CommandParameter="{Binding}"
                                                    Style="{DynamicResource SecondaryButtonStyle}" 
                                                    Margin="0,0,4,0"/>
                                            <Button Content="Delete" 
                                                    Command="{Binding DataContext.DeleteEntityCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                                    CommandParameter="{Binding}"
                                                    Style="{DynamicResource DangerButtonStyle}"/>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
                
                <!-- Management Actions -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,12">
                    <Button Content="➕ Import Entity" 
                            Command="{Binding ImportEntityCommand}"
                            Style="{DynamicResource PrimaryButtonStyle}" 
                            Margin="0,0,8,0"/>
                    <Button Content="📄 Export Selected" 
                            Command="{Binding ExportEntityCommand}"
                            Style="{DynamicResource SecondaryButtonStyle}" 
                            IsEnabled="{Binding HasSelectedEntity}"
                            Margin="0,0,8,0"/>
                    <Button Content="💾 Backup All" 
                            Command="{Binding BackupAllEntitiesCommand}"
                            Style="{DynamicResource SecondaryButtonStyle}"/>
                </StackPanel>
                
                <!-- Entity Statistics -->
                <Border Background="{DynamicResource TertiaryDarkBrush}" 
                        CornerRadius="4" 
                        Padding="12">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding TotalEntities}" 
                                      Style="{DynamicResource HeadingLargeStyle}"
                                      HorizontalAlignment="Center"/>
                            <TextBlock Text="Total Entities" 
                                      Style="{DynamicResource CaptionTextStyle}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                        
                        <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding ActiveEntities}" 
                                      Style="{DynamicResource HeadingLargeStyle}"
                                      HorizontalAlignment="Center"/>
                            <TextBlock Text="Active Now" 
                                      Style="{DynamicResource CaptionTextStyle}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                        
                        <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding StorageUsed}" 
                                      Style="{DynamicResource HeadingLargeStyle}"
                                      HorizontalAlignment="Center"/>
                            <TextBlock Text="Storage Used" 
                                      Style="{DynamicResource CaptionTextStyle}"
                                      HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <!-- Novice Chat Toolbar Template -->
    <DataTemplate x:Key="ChatToolbarTemplate">
        <DockPanel LastChildFill="True" Margin="0,0,0,8">
            <!-- Tabs placeholder -->
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                <TextBlock Text="Conversations" Style="{StaticResource CaptionTextStyle}" Foreground="{DynamicResource TextSecondaryBrush}" VerticalAlignment="Center"/>
            </StackPanel>
            <!-- Search -->
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                <TextBlock Text="Search:" Style="{StaticResource CaptionTextStyle}" Foreground="{DynamicResource TextMutedBrush}" VerticalAlignment="Center"/>
                <TextBox Width="200" Margin="6,0,0,0" Style="{StaticResource DarkTextBoxStyle}"/>
            </StackPanel>
        </DockPanel>
    </DataTemplate>

    <!-- Novice Chat Input Template -->
    <DataTemplate x:Key="ChatInputTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0"
                     Text="{Binding UserInput, UpdateSourceTrigger=PropertyChanged}"
                     Style="{StaticResource DarkTextBoxMultilineStyle}"
                     MinHeight="40"
                     MaxHeight="140"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     Margin="0,0,8,0"/>
            <Button Grid.Column="1"
                    Content="Send"
                    Command="{Binding SendCommand}"
                    Style="{StaticResource PrimaryButtonStyle}"
                    IsEnabled="{Binding CanSend}"/>
        </Grid>
    </DataTemplate>

    <!-- BaseModel Template - Novice Mode: simple large cards -->
    <DataTemplate x:Key="BaseModelTemplate">
        <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="16">
            <StackPanel>
                <!-- First Control: Model Selection -->
                <TextBlock Text="Select Base Model" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,0,0,4"/>
                <ComboBox ItemsSource="{Binding FilteredModels}" SelectedItem="{Binding SelectedModel}" Style="{DynamicResource DarkComboBoxStyle}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Run Text="{Binding Name}"/>
                                <Run Text=" ("/>
                                <Run Text="{Binding Size}"/>
                                <Run Text=")"/>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                
                <!-- Second Control: Runner Selection -->
                <TextBlock Text="Inference Engine" Foreground="{DynamicResource TextSecondaryBrush}" Margin="0,12,0,4"/>
                <ComboBox SelectedItem="{Binding SelectedRunner}" Style="{DynamicResource DarkComboBoxStyle}">
                    <ComboBoxItem>llama.cpp</ComboBoxItem>
                    <ComboBoxItem>vLLM</ComboBoxItem>
                    <ComboBoxItem>ExLlamaV2</ComboBoxItem>
                </ComboBox>
                
                <!-- Cards Grid (optional, below controls) -->
                <ItemsControl ItemsSource="{Binding FilteredModels}" Margin="0,16,0,0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{DynamicResource SecondaryDarkBrush}" 
                                    BorderBrush="{DynamicResource BorderBrush}" 
                                    BorderThickness="1" CornerRadius="10" 
                                    Width="260" Height="180" Margin="8">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource TextPrimaryBrush}" FontSize="16" FontWeight="SemiBold" Margin="12,10,12,4" TextTrimming="CharacterEllipsis"/>
                                    <StackPanel Grid.Row="1" Margin="12,4,12,4">
                                        <TextBlock Text="{Binding Size}" Foreground="{DynamicResource TextSecondaryBrush}"/>
                                    </StackPanel>
                                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="12,0,12,12">
                                        <Button Content="Load Model" Command="{Binding DataContext.LoadModelCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding}" Style="{StaticResource PrimaryButtonStyle}"/>
                                        <Button Content="Unload" Command="{Binding DataContext.UnloadModelCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Style="{StaticResource SecondaryButtonStyle}" Margin="8,0,0,0"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

</ResourceDictionary>